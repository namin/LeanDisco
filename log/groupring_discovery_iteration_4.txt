=== ITERATION 4 COMPLETE ===
Total Concepts: 1251 (+163 new)
Patterns: 15
Conjectures: 202
Theorems: 528
Top Concepts:
  - add2 (score: 1.000000)
  - zero (score: 1.000000)
  - succ (score: 1.000000)
  - one (score: 1.000000)
  - two (score: 1.000000)
  - add (score: 1.000000)
  - zero_eq_zero (score: 1.000000)
  - add_comm (score: 1.000000)
  - add1 (score: 1.000000)
  - add2 (score: 1.000000)
Generation Methods:
  seed: 18
  mined: 300
  application: 51
  specialization: 155
  pattern_recognition: 6
  composition: 174
  lemma_application: 154
  typeclass_specialization: 2
  algebraic_conjecture: 2
  concrete_instance: 2
All Patterns (15):
  - natural_number_sequence: Sequence: 0, 1, 2, ... (natural numbers via successor)
  - variation_zero_eq_zero: Variation pattern based on theorem zero_eq_zero
  - variation_add_comm: Variation pattern based on theorem add_comm
  - variation_zero_add_zero: Variation pattern based on theorem zero_add_zero
  - Nat_is_AddMonoid: Natural numbers form an additive monoid
  - succ_iteration_pattern: Repeated application of succ
  - add_iteration_pattern: Repeated application of add
  - add1_iteration_pattern: Repeated application of add1
  - add2_iteration_pattern: Repeated application of add2
  - Nat.sub_iteration_pattern: Repeated application of Nat.sub
  - meta_pattern_application_successful: Meta-pattern: application has been successful (45 concepts)
  - meta_pattern_composition_successful: Meta-pattern: composition has been successful (24 concepts)
  - meta_pattern_specialization_successful: Meta-pattern: specialization has been successful (50 concepts)
  - revived_natural_number_sequence: Revived: Sequence: 0, 1, 2, ... (natural numbers via successor)
  - revived_variation_zero_eq_zero: Revived: Variation pattern based on theorem zero_eq_zero
All Conjectures (202):
  - succ_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - succ_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - succ_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - succ_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - succ_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - succ_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - succ_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - succ_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - succ_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.succ ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_succ_eq_0
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.add Nat.zero)
  - add_comp_succ_eq_1
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_succ_eq_2
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) Nat.zero
  - add_comp_succ_eq_3
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.add Nat.zero)
  - add_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.add Nat.zero)
  - add_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - add_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_succ_eq_0
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.add Nat.zero)
  - add_comp_succ_eq_1
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_succ_eq_2
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) Nat.zero
  - add_comp_succ_eq_3
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.add Nat.zero)
  - add_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - add_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.add Nat.zero)
  - add_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - add_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.add ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - add1_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add1_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add1_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) Nat.zero
  - add1_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add1_comp_add2_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add1_comp_add2_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add1_comp_add2_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - add1_comp_add2_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - add1_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add1_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) Nat.zero
  - add2_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add2_comp_add1_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add2_comp_add1_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) Nat.zero
  - add2_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add2_comp_add1_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add2_comp_add1_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) Nat.zero
  - add2_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add2_comp_add1_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add2_comp_add1_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) Nat.zero
  - add2_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - add2_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - add2_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - add2_comp_add1_eq_2
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - add2_comp_add1_eq_3
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) Nat.zero)
  - Nat.sub_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) Nat.zero
  - Nat.sub_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) Nat.zero)
  - Nat.sub_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - Nat.sub_comp_add1_eq_2
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - Nat.sub_comp_add1_eq_3
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_add2_eq_0
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) Nat.zero)
  - Nat.sub_comp_add2_eq_1
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - Nat.sub_comp_add2_eq_2
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - Nat.sub_comp_add2_eq_3
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_succ_eq_0
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) Nat.zero)
  - Nat.sub_comp_succ_eq_1
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_succ_eq_2
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) Nat.zero
  - Nat.sub_comp_succ_eq_3
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - Nat.sub_comp_add1_eq_0
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) Nat.zero)
  - Nat.sub_comp_add1_eq_1
    Statement: Eq.{1} Nat ((fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ((Nat.rec.{1} (fun (t : Nat) => PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) t)) (PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) Nat.zero) PUnit.{1} (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => x._@.Init.Prelude._hyg.4348) PUnit.unit.{1}) (fun (n : Nat) (n_ih : PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) => PProd.mk.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) (Nat.succ n)) (PProd.{1, 1} ((fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n) (Nat.below.{1} (fun (x._@.Init.Prelude._hyg.4349 : [mdata borrowed:1 Nat]) => ([mdata borrowed:1 Nat]) -> Nat) n)) (fun (x._@.Init.Prelude._hyg.4348 : [mdata borrowed:1 Nat]) => (fun (motive : ([mdata borrowed:1 Nat]) -> Type) (x._@.Init.Prelude._hyg.3120.3131 : [mdata borrowed:1 Nat]) (h_1 : Unit -> (motive (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)))) (h_2 : forall (n : Nat), motive (Nat.succ n)) => Nat.rec.{1} (fun (x : [mdata borrowed:1 Nat]) => motive x) (h_1 PUnit.unit.{1}) (fun (n : Nat) (n_ih : motive n) => h_2 n) x._@.Init.Prelude._hyg.3120.3131) (fun (x._@.Init.Prelude._hyg.3730.3741 : [mdata borrowed:1 Nat]) => Nat) (n_ih.1 x._@.Init.Prelude._hyg.4348) (fun (_ : Unit) => 0) (fun (a : Nat) => a)) n_ih) x._@.Init.Prelude._hyg.4349).1) x._@.Init.Prelude._hyg.4348) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - nat_mul_comp_succ_eq_0
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_succ_eq_1
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_succ_eq_2
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) Nat.zero
  - nat_mul_comp_succ_eq_3
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - nat_mul_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - nat_mul_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - nat_mul_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - nat_mul_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_succ_eq_0
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_succ_eq_1
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_succ_eq_2
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) Nat.zero
  - nat_mul_comp_succ_eq_3
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_add1_eq_0
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_add1_eq_1
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)
  - nat_mul_comp_add1_eq_2
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) Nat.zero
  - nat_mul_comp_add1_eq_3
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero)) (Nat.succ Nat.zero)
  - nat_mul_comp_add2_eq_0
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.mul Nat.zero)
  - nat_mul_comp_add2_eq_1
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)
  - nat_mul_comp_add2_eq_2
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) Nat.zero
  - nat_mul_comp_add2_eq_3
    Statement: Eq.{1} Nat (Nat.mul ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero)) (Nat.succ Nat.zero)
  - succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ (Nat.succ Nat.zero))
  - add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero))
  - add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero))
  - succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ (Nat.succ Nat.zero))
  - add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) Nat.zero) ((fun (x : Nat) => Nat.add (Nat.succ Nat.zero) x) (Nat.succ Nat.zero))
  - add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) Nat.zero) ((fun (x : Nat) => Nat.add (Nat.succ (Nat.succ Nat.zero)) x) (Nat.succ Nat.zero))
  - succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 2 (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.add 2 (Nat.add 1 x)) (Nat.succ Nat.zero))
  - add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 2 (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.add 2 (Nat.add 1 x)) (Nat.succ Nat.zero))
  - succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) (Nat.succ Nat.zero))
  - add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 x)) (Nat.succ Nat.zero))
  - add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 x)) (Nat.succ Nat.zero))
  - nat_mul_zero_conjecture
    Statement: forall (n : Nat), Eq.{1} Nat (Nat.mul n Nat.zero) Nat.zero
  - nat_mul_comm_conjecture
    Statement: forall (a : Nat) (b : Nat), Eq.{1} Nat (Nat.mul a b) (Nat.mul b a)
  - succ_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.succ (Nat.add 2 x))) (Nat.succ Nat.zero))
  - succ_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add1_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_succ_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 1 (Nat.add 2 x))) (Nat.succ Nat.zero))
  - add1_compose_add2_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.add 1 (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add2_compose_succ_compose_add1_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 1 x))) (Nat.succ Nat.zero))
  - add2_compose_succ_compose_add2_preserves_add_comm_spec_zero_maybe
    Statement: Eq.{1} Nat ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 2 x))) Nat.zero) ((fun (x : Nat) => Nat.succ (Nat.add 2 (Nat.add 2 x))) (Nat.succ Nat.zero))
All Theorems (528):
  - zero_eq_zero
    Statement: Eq.{1} Nat Nat.zero Nat.zero
  - add_comm
    Statement: forall (n : Nat) (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m n)
  - zero_add_zero
    Statement: Eq.{1} Nat (Nat.add Nat.zero Nat.zero) Nat.zero
  - one_add_one_eq_two
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - two_add_one_eq_three
    Statement: Eq.{1} Nat (Nat.add (Nat.succ (Nat.succ Nat.zero)) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - mul_one
    Statement: forall {M : Type.{u}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3248 : MulOneClass.{u} M] (a : M), Eq.{succ u} M (HMul.hMul.{u, u, u} M M M (instHMul.{u} M (MulOneClass.toMul.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3248)) a (OfNat.ofNat.{u} M 1 (One.toOfNat1.{u} M (MulOneClass.toOne.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3248)))) a
  - one_mul
    Statement: forall {M : Type.{u}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3229 : MulOneClass.{u} M] (a : M), Eq.{succ u} M (HMul.hMul.{u, u, u} M M M (instHMul.{u} M (MulOneClass.toMul.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3229)) (OfNat.ofNat.{u} M 1 (One.toOfNat1.{u} M (MulOneClass.toOne.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3229))) a) a
  - inv_inv
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4964 : InvolutiveInv.{u_1} G] (a : G), Eq.{succ u_1} G (Inv.inv.{u_1} G (InvolutiveInv.toInv.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4964) (Inv.inv.{u_1} G (InvolutiveInv.toInv.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4964) a)) a
  - Ring.mul_assoc
    Statement: forall {α : Type.{u_1}} [self : NonUnitalRing.{u_1} α] (a : α) (b : α) (c : α), Eq.{succ u_1} α (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (NonUnitalNonAssocRing.toMul.{u_1} α (NonUnitalRing.toNonUnitalNonAssocRing.{u_1} α self))) (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (NonUnitalNonAssocRing.toMul.{u_1} α (NonUnitalRing.toNonUnitalNonAssocRing.{u_1} α self))) a b) c) (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (NonUnitalNonAssocRing.toMul.{u_1} α (NonUnitalRing.toNonUnitalNonAssocRing.{u_1} α self))) a (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (NonUnitalNonAssocRing.toMul.{u_1} α (NonUnitalRing.toNonUnitalNonAssocRing.{u_1} α self))) b c))
  - Ring.one_mul
    Statement: forall {α : Type.{u}} [self : Semiring.{u} α] (a : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} α (Semiring.toNonUnitalSemiring.{u} α self)))) (OfNat.ofNat.{u} α 1 (One.toOfNat1.{u} α (Semiring.toOne.{u} α self))) a) a
  - Ring.mul_one
    Statement: forall {α : Type.{u}} [self : Semiring.{u} α] (a : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} α (Semiring.toNonUnitalSemiring.{u} α self)))) a (OfNat.ofNat.{u} α 1 (One.toOfNat1.{u} α (Semiring.toOne.{u} α self)))) a
  - nat_add_zero
    Statement: forall (n : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) n
  - nat_zero_add
    Statement: forall (n : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) n
  - nat_add_assoc
    Statement: forall (n : Nat) (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_comm
    Statement: forall (n : Nat) (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m n)
  - nat_succ_add
    Statement: forall (n : Nat) (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ n) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m))
  - nat_add_succ
    Statement: forall (n : Nat) (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m))
  - nat_add_one
    Statement: forall (n : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ n)
  - nat_one_add
    Statement: forall (n : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) n) (Nat.succ n)
  - zero_eq_zero
    Statement: Eq.{1} Nat Nat.zero Nat.zero
  - add_comm
    Statement: forall (n : Nat) (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m n)
  - zero_add_zero
    Statement: Eq.{1} Nat (Nat.add Nat.zero Nat.zero) Nat.zero
  - one_add_one_eq_two
    Statement: Eq.{1} Nat (Nat.add (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - two_add_one_eq_three
    Statement: Eq.{1} Nat (Nat.add (Nat.succ (Nat.succ Nat.zero)) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - MonoidHom.inv_comp
    Statement: forall {M : Type.{u_2}} {N : Type.{u_3}} {G : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 : MulOneClass.{u_2} M] [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 : MulOneClass.{u_3} N] [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354 : CommGroup.{u_5} G] (φ : MonoidHom.{u_3, u_5} N G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354))))) (ψ : MonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351), Eq.{max (succ u_2) (succ u_5)} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354))))) (MonoidHom.comp.{u_2, u_3, u_5} M N G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354)))) (Inv.inv.{max u_3 u_5} (MonoidHom.{u_3, u_5} N G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354))))) (MonoidHom.instInv.{u_3, u_5} N G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354) φ) ψ) (Inv.inv.{max u_5 u_2} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354))))) (MonoidHom.instInv.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354) (MonoidHom.comp.{u_2, u_3, u_5} M N G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1348 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1351 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1354)))) φ ψ))
  - MonoidHom.flip_apply
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} {P : Type.{uP}} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 : MulOneClass.{uM} M} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 : MulOneClass.{uN} N} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624 : CommMonoid.{uP} P} (f : MonoidHom.{uM, max uP uN} M (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624)))) (x : M) (y : N), Eq.{succ uP} P (DFunLike.coe.{max (succ uM) (succ uP), succ uM, succ uP} (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => P) (MonoidHom.instFunLike.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (DFunLike.coe.{max (max (succ uM) (succ uN)) (succ uP), succ uN, max (succ uM) (succ uP)} (MonoidHom.{uN, max uP uM} N (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{max uM uP} (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (CommMonoid.toMonoid.{max uM uP} (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624)))) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instFunLike.{uN, max uM uP} N (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{max uM uP} (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (CommMonoid.toMonoid.{max uM uP} (MonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624)))) (MonoidHom.flip.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624 f) y) x) (DFunLike.coe.{max (succ uN) (succ uP), succ uN, succ uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (MonoidHom.instFunLike.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (DFunLike.coe.{max (max (succ uM) (succ uN)) (succ uP), succ uM, max (succ uN) (succ uP)} (MonoidHom.{uM, max uP uN} M (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624)))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instFunLike.{uM, max uN uP} M (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.618 (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624))) (MonoidHom.instCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.621 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.624)))) f x) y)
  - add_add_neg_cancel'_right
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.6938 : AddCommGroup.{u_3} G] (a : G) (b : G), Eq.{succ u_3} G (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G (AddCommGroup.toAddGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6938)))))) a (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G (AddCommGroup.toAddGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6938)))))) b (Neg.neg.{u_3} G (NegZeroClass.toNeg.{u_3} G (SubNegZeroMonoid.toNegZeroClass.{u_3} G (SubtractionMonoid.toSubNegZeroMonoid.{u_3} G (SubtractionCommMonoid.toSubtractionMonoid.{u_3} G (AddCommGroup.toDivisionAddCommMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6938))))) a))) b
  - zsmul_add
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4011 : SubtractionCommMonoid.{u_1} α] (a : α) (b : α) (n : Int), Eq.{succ u_1} α (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4011)))) n (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4011)))))) a b)) (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4011)))))) (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4011)))) n a) (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4011)))) n b))
  - sub_add
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.3655 : SubtractionCommMonoid.{u_1} α] (a : α) (b : α) (c : α), Eq.{succ u_1} α (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3655)))))) (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3655)))) a b) c) (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3655)))) a (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3655)))) b c))
  - Semiring.npow_zero
    Statement: forall {α : Type.{u}} [self : Semiring.{u} α] (x : α), Eq.{succ u} α (Semiring.npow.{u} α self (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) x) (OfNat.ofNat.{u} α 1 (One.toOfNat1.{u} α (Semiring.toOne.{u} α self)))
  - add_left_surjective
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4173 : AddGroup.{u_3} G] (a : G), Function.Surjective.{succ u_3, succ u_3} G G (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.4187 : G) => HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4173))))) a x._@.Mathlib.Algebra.Group.Basic._hyg.4187)
  - neg_neg
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4964 : InvolutiveNeg.{u_1} G] (a : G), Eq.{succ u_1} G (Neg.neg.{u_1} G (InvolutiveNeg.toNeg.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4964) (Neg.neg.{u_1} G (InvolutiveNeg.toNeg.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4964) a)) a
  - Nat.mul_self_sub_mul_self_eq
    Statement: forall (a : Nat) (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a a) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) a b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) a b))
  - AddCommSemigroup.ext_iff
    Statement: forall {G : Type.{u}} {x : AddCommSemigroup.{u} G} {y : AddCommSemigroup.{u} G}, Iff (Eq.{succ u} (AddCommSemigroup.{u} G) x y) (Eq.{succ u} (G -> G -> G) (Add.add.{u} G (AddSemigroup.toAdd.{u} G (AddCommSemigroup.toAddSemigroup.{u} G x))) (Add.add.{u} G (AddSemigroup.toAdd.{u} G (AddCommSemigroup.toAddSemigroup.{u} G y))))
  - AddMonoidHom.coe_comp
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 : AddZeroClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485 : AddZeroClass.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488 : AddZeroClass.{u_6} P] (g : AddMonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488) (f : AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485), Eq.{max (succ u_4) (succ u_6)} (M -> P) (DFunLike.coe.{max (succ u_4) (succ u_6), succ u_4, succ u_6} (AddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => P) (AddMonoidHom.instFunLike.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488) (AddMonoidHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488 g f)) (Function.comp.{succ u_4, succ u_5, succ u_6} M N P (DFunLike.coe.{max (succ u_5) (succ u_6), succ u_5, succ u_6} (AddMonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (AddMonoidHom.instFunLike.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7488) g) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7482 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7485) f))
  - AddRightCancelMonoid.add_right_cancel
    Statement: forall {M : Type.{u}} [self : AddRightCancelMonoid.{u} M] (a : M) (b : M) (c : M), (Eq.{succ u} M (HAdd.hAdd.{u, u, u} M M M (instHAdd.{u} M (AddSemigroup.toAdd.{u} M (AddMonoid.toAddSemigroup.{u} M (AddRightCancelMonoid.toAddMonoid.{u} M self)))) a b) (HAdd.hAdd.{u, u, u} M M M (instHAdd.{u} M (AddSemigroup.toAdd.{u} M (AddMonoid.toAddSemigroup.{u} M (AddRightCancelMonoid.toAddMonoid.{u} M self)))) c b)) -> (Eq.{succ u} M a c)
  - add_mul
    Statement: forall {R : Type.{v}} [inst._@.Mathlib.Algebra.Ring.Defs._hyg.224 : Mul.{v} R] [inst._@.Mathlib.Algebra.Ring.Defs._hyg.227 : Add.{v} R] [inst._@.Mathlib.Algebra.Ring.Defs._hyg.230 : RightDistribClass.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.224 inst._@.Mathlib.Algebra.Ring.Defs._hyg.227] (a : R) (b : R) (c : R), Eq.{succ v} R (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.224) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.227) a b) c) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.227) (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.224) a c) (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.224) b c))
  - NonUnitalNonAssocSemiring.right_distrib
    Statement: forall {α : Type.{u}} [self : NonUnitalNonAssocSemiring.{u} α] (a : α) (b : α) (c : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α self)) (HAdd.hAdd.{u, u, u} α α α (instHAdd.{u} α (AddSemigroup.toAdd.{u} α (AddMonoid.toAddSemigroup.{u} α (AddCommMonoid.toAddMonoid.{u} α (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} α self))))) a b) c) (HAdd.hAdd.{u, u, u} α α α (instHAdd.{u} α (AddSemigroup.toAdd.{u} α (AddMonoid.toAddSemigroup.{u} α (AddCommMonoid.toAddMonoid.{u} α (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} α self))))) (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α self)) a c) (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α self)) b c))
  - map_comp_sub
    Statement: forall {ι : Type.{u_1}} {G : Type.{u_7}} {H : Type.{u_8}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4379 : FunLike.{succ u_9, succ u_7, succ u_8} F G H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4384 : AddGroup.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4387 : SubtractionMonoid.{u_8} H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4390 : AddMonoidHomClass.{u_9, u_7, u_8} F G H (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4384))) (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4387))) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4379] (f : F) (g : ι -> G) (h : ι -> G), Eq.{max (succ u_1) (succ u_8)} (ι -> H) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4379 f) (HSub.hSub.{max u_1 u_7, max u_1 u_7, max u_1 u_7} (ι -> G) (ι -> G) (ι -> G) (instHSub.{max u_1 u_7} (ι -> G) (Pi.instSub.{u_1, u_7} ι (fun (a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4396 : ι) => G) (fun (i : ι) => SubNegMonoid.toSub.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4384)))) g h)) (HSub.hSub.{max u_1 u_8, max u_1 u_8, max u_1 u_8} (ι -> H) (ι -> H) (ι -> H) (instHSub.{max u_1 u_8} (ι -> H) (Pi.instSub.{u_1, u_8} ι (fun (a._@.Init.Prelude._hyg.27 : ι) => H) (fun (i : ι) => SubNegMonoid.toSub.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4387)))) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4379 f) g) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4379 f) h))
  - Nat.mul_dvd_of_dvd_div
    Statement: forall {a : Nat} {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd a (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c a) b)
  - map_sub
    Statement: forall {G : Type.{u_7}} {H : Type.{u_8}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4315 : FunLike.{succ u_9, succ u_7, succ u_8} F G H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4320 : AddGroup.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4323 : SubtractionMonoid.{u_8} H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4326 : AddMonoidHomClass.{u_9, u_7, u_8} F G H (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4320))) (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4323))) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4315] (f : F) (a : G) (b : G), Eq.{succ u_8} H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4315 f (HSub.hSub.{u_7, u_7, u_7} G G G (instHSub.{u_7} G (SubNegMonoid.toSub.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4320))) a b)) (HSub.hSub.{u_8, u_8, u_8} H H H (instHSub.{u_8} H (SubNegMonoid.toSub.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4323))) (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4315 f a) (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4315 f b))
  - CommSemigroup.mul_comm
    Statement: forall {G : Type.{u}} [self : CommSemigroup.{u} G] (a : G) (b : G), Eq.{succ u} G (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (CommSemigroup.toSemigroup.{u} G self))) a b) (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (CommSemigroup.toSemigroup.{u} G self))) b a)
  - map_zsmul
    Statement: forall {G : Type.{u_7}} {H : Type.{u_8}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4757 : FunLike.{succ u_9, succ u_7, succ u_8} F G H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4762 : AddGroup.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4765 : SubtractionMonoid.{u_8} H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4768 : AddMonoidHomClass.{u_9, u_7, u_8} F G H (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4762))) (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4765))) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4757] (f : F) (n : Int) (g : G), Eq.{succ u_8} H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4757 f (HSMul.hSMul.{0, u_7, u_7} Int G G (instHSMul.{0, u_7} Int G (SubNegMonoid.toZSMul.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4762))) n g)) (HSMul.hSMul.{0, u_8, u_8} Int H H (instHSMul.{0, u_8} Int H (SubNegMonoid.toZSMul.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4765))) n (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4757 f g))
  - InvolutiveNeg.neg_neg
    Statement: forall {A : Type.{u_2}} [self : InvolutiveNeg.{u_2} A] (x : A), Eq.{succ u_2} A (Neg.neg.{u_2} A (InvolutiveNeg.toNeg.{u_2} A self) (Neg.neg.{u_2} A (InvolutiveNeg.toNeg.{u_2} A self) x)) x
  - eq_mul_inv_of_mul_eq
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4228 : Group.{u_3} G] {a : G} {b : G} {c : G}, (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4228))))) a c) b) -> (Eq.{succ u_3} G a (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4228))))) b (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4228)))) c)))
  - pow_mul'
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4485 : Monoid.{u_2} M] (a : M) (m : Nat) (n : Nat), Eq.{succ u_2} M (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4485)) a (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m n)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4485)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4485)) a n) m)
  - Nat.mul_div_mul_left
    Statement: forall {m : Nat} (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) m) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - MonoidHom.comp.eq_1
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 : MulOneClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 : MulOneClass.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326 : MulOneClass.{u_6} P] (hnp : MonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326) (hmn : MonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323), Eq.{max (succ u_4) (succ u_6)} (MonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326) (MonoidHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326 hnp hmn) (MonoidHom.mk.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326 (OneHom.mk.{u_4, u_6} M P (MulOneClass.toOne.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320) (MulOneClass.toOne.{u_6} P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326) (Function.comp.{succ u_4, succ u_5, succ u_6} M N P (DFunLike.coe.{max (succ u_5) (succ u_6), succ u_5, succ u_6} (MonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (MonoidHom.instFunLike.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326) hnp) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323) hmn)) (MonoidHom.comp._proof_1.{u_6, u_5, u_4} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326 hnp hmn)) (MonoidHom.comp._proof_2.{u_6, u_5, u_4} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7320 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7323 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7326 hnp hmn))
  - add_zero
    Statement: forall {M : Type.{u}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3248 : AddZeroClass.{u} M] (a : M), Eq.{succ u} M (HAdd.hAdd.{u, u, u} M M M (instHAdd.{u} M (AddZeroClass.toAdd.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3248)) a (OfNat.ofNat.{u} M 0 (Zero.toOfNat0.{u} M (AddZeroClass.toZero.{u} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3248)))) a
  - NonAssocRing.natCast_succ
    Statement: forall {α : Type.{u_1}} [self : NonAssocRing.{u_1} α] (n : Nat), Eq.{succ u_1} α (NatCast.natCast.{u_1} α (NonAssocRing.toNatCast.{u_1} α self) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))) (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddSemigroup.toAdd.{u_1} α (AddMonoid.toAddSemigroup.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (AddGroup.toSubNegMonoid.{u_1} α (AddCommGroup.toAddGroup.{u_1} α (NonUnitalNonAssocRing.toAddCommGroup.{u_1} α (NonAssocRing.toNonUnitalNonAssocRing.{u_1} α self)))))))) (NatCast.natCast.{u_1} α (NonAssocRing.toNatCast.{u_1} α self) n) (OfNat.ofNat.{u_1} α 1 (One.toOfNat1.{u_1} α (NonAssocRing.toOne.{u_1} α self))))
  - instInhabitedMulHom.eq_1
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 : Mul.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714 : MulOneClass.{u_5} N], Eq.{max 1 (succ u_5) (succ u_4)} (Inhabited.{max (succ u_5) (succ u_4)} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 (MulOneClass.toMul.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714))) (instInhabitedMulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714) (Inhabited.mk.{max (succ u_4) (succ u_5)} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 (MulOneClass.toMul.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714)) (OfNat.ofNat.{max u_4 u_5} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 (MulOneClass.toMul.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714)) 1 (One.toOfNat1.{max u_4 u_5} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 (MulOneClass.toMul.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714)) (instOneMulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9711 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9714))))
  - OneHom.one_apply
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 : One.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536 : One.{u_5} N] (x : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (OneHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536) (OfNat.ofNat.{max u_4 u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536) 1 (One.toOfNat1.{max u_4 u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536) (instOneOneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9533 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536))) x) (OfNat.ofNat.{u_5} N 1 (One.toOfNat1.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9536))
  - CommGroupWithZero.zpow_zero'
    Statement: forall {G₀ : Type.{u_2}} [self : CommGroupWithZero.{u_2} G₀] (a : G₀), Eq.{succ u_2} G₀ (CommGroupWithZero.zpow.{u_2} G₀ self (OfNat.ofNat.{0} Int 0 (instOfNat 0)) a) (OfNat.ofNat.{u_2} G₀ 1 (One.toOfNat1.{u_2} G₀ (Monoid.toOne.{u_2} G₀ (CommMonoid.toMonoid.{u_2} G₀ (CommMonoidWithZero.toCommMonoid.{u_2} G₀ (CommGroupWithZero.toCommMonoidWithZero.{u_2} G₀ self))))))
  - mul_rotate'
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.761 : CommSemigroup.{u_3} G] (a : G) (b : G) (c : G), Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.761))) a (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.761))) b c)) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.761))) b (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.761))) c a))
  - pow_right_comm
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4521 : Monoid.{u_2} M] (a : M) (m : Nat) (n : Nat), Eq.{succ u_2} M (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4521)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4521)) a m) n) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4521)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4521)) a n) m)
  - Nat.succ_max_succ
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ x) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax x y))
  - LeftCancelMonoid.mul_left_cancel
    Statement: forall {M : Type.{u}} [self : LeftCancelMonoid.{u} M] (a : M) (b : M) (c : M), (Eq.{succ u} M (HMul.hMul.{u, u, u} M M M (instHMul.{u} M (Semigroup.toMul.{u} M (Monoid.toSemigroup.{u} M (LeftCancelMonoid.toMonoid.{u} M self)))) a b) (HMul.hMul.{u, u, u} M M M (instHMul.{u} M (Semigroup.toMul.{u} M (Monoid.toSemigroup.{u} M (LeftCancelMonoid.toMonoid.{u} M self)))) a c)) -> (Eq.{succ u} M b c)
  - map_eq_zero_iff
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1636 : Zero.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1639 : Zero.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1642 : FunLike.{succ u_9, succ u_4, succ u_5} F M N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1647 : ZeroHomClass.{u_9, u_4, u_5} F M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1636 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1639 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1642] (f : F), (Function.Injective.{succ u_4, succ u_5} M N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1642 f)) -> (forall {x : M}, Iff (Eq.{succ u_5} N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1642 f x) (OfNat.ofNat.{u_5} N 0 (Zero.toOfNat0.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1639))) (Eq.{succ u_4} M x (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1636))))
  - nsmul_eq_mod_nsmul
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1030 : AddMonoid.{u_4} M] {a : M} {n : Nat} (m : Nat), (Eq.{succ u_4} M (HSMul.hSMul.{0, u_4, u_4} Nat M M (instHSMul.{0, u_4} Nat M (AddMonoid.toNatSMul.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) n a) (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030))))) -> (Eq.{succ u_4} M (HSMul.hSMul.{0, u_4, u_4} Nat M M (instHSMul.{0, u_4} Nat M (AddMonoid.toNatSMul.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) m a) (HSMul.hSMul.{0, u_4, u_4} Nat M M (instHSMul.{0, u_4} Nat M (AddMonoid.toNatSMul.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) m n) a))
  - DivInvMonoid.zpow_succ'
    Statement: forall {G : Type.{u}} [self : DivInvMonoid.{u} G] (n : Nat) (a : G), Eq.{succ u} G (DivInvMonoid.zpow.{u} G self (Nat.cast.{0} Int instNatCastInt (Nat.succ n)) a) (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (Monoid.toSemigroup.{u} G (DivInvMonoid.toMonoid.{u} G self)))) (DivInvMonoid.zpow.{u} G self (Nat.cast.{0} Int instNatCastInt n) a) a)
  - Commute.refl
    Statement: forall {S : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.88 : Mul.{u_3} S] (a : S), Commute.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.88 a a
  - MulHom.id_apply
    Statement: forall (M : Type.{u_10}) [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022 : Mul.{u_10} M] (x : M), Eq.{succ u_10} M (DFunLike.coe.{succ u_10, succ u_10, succ u_10} (MulHom.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => M) (MulHom.funLike.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022) (MulHom.id.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7022) x) x
  - DivisionCommMonoid.mul_comm
    Statement: forall {G : Type.{u}} [self : DivisionCommMonoid.{u} G] (a : G) (b : G), Eq.{succ u} G (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (Monoid.toSemigroup.{u} G (DivInvMonoid.toMonoid.{u} G (DivisionMonoid.toDivInvMonoid.{u} G (DivisionCommMonoid.toDivisionMonoid.{u} G self)))))) a b) (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (Monoid.toSemigroup.{u} G (DivInvMonoid.toMonoid.{u} G (DivisionMonoid.toDivInvMonoid.{u} G (DivisionCommMonoid.toDivisionMonoid.{u} G self)))))) b a)
  - div_eq_div_mul_div
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.6725 : CommGroup.{u_3} G] (a : G) (b : G) (c : G), Eq.{succ u_3} G (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6725)))) a b) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6725)))))) (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6725)))) c b) (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6725)))) a c))
  - MonoidHom.mk'.eq_1
    Statement: forall {M : Type.{u_4}} {G : Type.{u_7}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043 : Group.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046 : MulOneClass.{u_4} M] (f : M -> G) (map_mul : forall (a : M) (b : M), Eq.{succ u_7} G (f (HMul.hMul.{u_4, u_4, u_4} M M M (instHMul.{u_4} M (MulOneClass.toMul.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046)) a b)) (HMul.hMul.{u_7, u_7, u_7} G G G (instHMul.{u_7} G (MulOneClass.toMul.{u_7} G (Monoid.toMulOneClass.{u_7} G (DivInvMonoid.toMonoid.{u_7} G (Group.toDivInvMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043))))) (f a) (f b))), Eq.{max (succ u_4) (succ u_7)} (MonoidHom.{u_4, u_7} M G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046 (Monoid.toMulOneClass.{u_7} G (DivInvMonoid.toMonoid.{u_7} G (Group.toDivInvMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043)))) (MonoidHom.mk'.{u_4, u_7} M G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046 f map_mul) (MonoidHom.mk.{u_4, u_7} M G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046 (Monoid.toMulOneClass.{u_7} G (DivInvMonoid.toMonoid.{u_7} G (Group.toDivInvMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043))) (OneHom.mk.{u_4, u_7} M G (MulOneClass.toOne.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046) (MulOneClass.toOne.{u_7} G (Monoid.toMulOneClass.{u_7} G (DivInvMonoid.toMonoid.{u_7} G (Group.toDivInvMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043)))) f (MonoidHom.mk'._proof_1.{u_7, u_4} M G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6043 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6046 f map_mul)) map_mul)
  - zpow_ofNat
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.5469 : DivInvMonoid.{u_1} G] (a : G) (n : Nat), Eq.{succ u_1} G (HPow.hPow.{u_1, 0, u_1} G Int G (instHPow.{u_1, 0} G Int (DivInvMonoid.toZPow.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5469)) a ([mdata noindex:1 OfNat.ofNat.{0} Int n (instOfNat n)])) (HPow.hPow.{u_1, 0, u_1} G Nat G (instHPow.{u_1, 0} G Nat (Monoid.toNatPow.{u_1} G (DivInvMonoid.toMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5469))) a (OfNat.ofNat.{0} Nat n (instOfNatNat n)))
  - MonoidHom.flip.eq_1
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} {P : Type.{uP}} {mM : MulOneClass.{uM} M} {mN : MulOneClass.{uN} N} {mP : CommMonoid.{uP} P} (f : MonoidHom.{uM, max uP uN} M (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) mM (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uN, uP} N P mN mP)))), Eq.{max (succ uN) (succ (max uP uM))} (MonoidHom.{uN, max uP uM} N (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) mN (Monoid.toMulOneClass.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uM, uP} M P mM mP)))) (MonoidHom.flip.{uM, uN, uP} M N P mM mN mP f) (MonoidHom.mk.{uN, max uM uP} N (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) mN (Monoid.toMulOneClass.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uM, uP} M P mM mP))) (OneHom.mk.{uN, max uM uP} N (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MulOneClass.toOne.{uN} N mN) (MulOneClass.toOne.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (Monoid.toMulOneClass.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uM uP} (MonoidHom.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uM, uP} M P mM mP)))) (fun (y : N) => MonoidHom.mk.{uM, uP} M P mM (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP)) (OneHom.mk.{uM, uP} M P (MulOneClass.toOne.{uM} M mM) (MulOneClass.toOne.{uP} P (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (fun (x : M) => DFunLike.coe.{max (succ uN) (succ uP), succ uN, succ uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (MonoidHom.instFunLike.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (DFunLike.coe.{max (max (succ uM) (succ uN)) (succ uP), succ uM, max (succ uN) (succ uP)} (MonoidHom.{uM, max uP uN} M (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) mM (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uN, uP} N P mN mP)))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instFunLike.{uM, max uN uP} M (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) mM (Monoid.toMulOneClass.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (CommMonoid.toMonoid.{max uN uP} (MonoidHom.{uN, uP} N P mN (Monoid.toMulOneClass.{uP} P (CommMonoid.toMonoid.{uP} P mP))) (MonoidHom.instCommMonoid.{uN, uP} N P mN mP)))) f x) y) (MonoidHom.flip._proof_1.{uP, uN, uM} M N P mM mN mP f y)) (MonoidHom.flip._proof_2.{uP, uN, uM} M N P mM mN mP f y)) (MonoidHom.flip._proof_5.{uM, uP, uN} M N P mM mN mP f)) (MonoidHom.flip._proof_8.{uM, uP, uN} M N P mM mN mP f))
  - eq_div_iff_mul_eq'
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.5383 : Group.{u_3} G] {a : G} {b : G} {c : G}, Iff (Eq.{succ u_3} G a (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5383))) b c)) (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5383))))) a c) b)
  - ZeroHom.coe_id
    Statement: forall {M : Type.{u_10}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107 : Zero.{u_10} M], Eq.{succ u_10} (M -> M) (DFunLike.coe.{succ u_10, succ u_10, succ u_10} (ZeroHom.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => M) (ZeroHom.funLike.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107) (ZeroHom.id.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7107)) (id.{succ u_10} M)
  - Nat.sub_one_add_one_eq_of_pos
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) n)
  - AddMonoidHom.flipHom.eq_1
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} {P : Type.{uP}} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 : AddZeroClass.{uM} M} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 : AddZeroClass.{uN} N} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026 : AddCommMonoid.{uP} P}, Eq.{max (succ (max (max uP uN) uM)) (succ (max (max uP uM) uN))} (AddMonoidHom.{max (max uP uN) uM, max (max uP uM) uN} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uN, max uM uP} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))))) (AddMonoidHom.flipHom.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026) (AddMonoidHom.mk.{max (max uM uN) uP, max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uN, max uM uP} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (ZeroHom.mk.{max (max uM uN) uP, max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddZeroClass.toZero.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))))) (AddZeroClass.toZero.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uN, max uM uP} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))))) (AddMonoidHom.flip.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026) (AddMonoidHom.flipHom._proof_1.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)) (AddMonoidHom.flipHom._proof_2.{uM, uP, uN} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))
  - inv_div'
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.3377 : DivisionCommMonoid.{u_1} α] (a : α) (b : α), Eq.{succ u_1} α (Inv.inv.{u_1} α (InvOneClass.toInv.{u_1} α (DivInvOneMonoid.toInvOneClass.{u_1} α (DivisionMonoid.toDivInvOneMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3377)))) (HDiv.hDiv.{u_1, u_1, u_1} α α α (instHDiv.{u_1} α (DivInvMonoid.toDiv.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3377)))) a b)) (HDiv.hDiv.{u_1, u_1, u_1} α α α (instHDiv.{u_1} α (DivInvMonoid.toDiv.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3377)))) (Inv.inv.{u_1} α (InvOneClass.toInv.{u_1} α (DivInvOneMonoid.toInvOneClass.{u_1} α (DivisionMonoid.toDivInvOneMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3377)))) a) (Inv.inv.{u_1} α (InvOneClass.toInv.{u_1} α (DivInvOneMonoid.toInvOneClass.{u_1} α (DivisionMonoid.toDivInvOneMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3377)))) b))
  - Monoid.End.instOne.eq_1
    Statement: forall (M : Type.{u_4}) [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9087 : MulOneClass.{u_4} M], Eq.{succ u_4} (One.{u_4} (Monoid.End.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9087)) (Monoid.End.instOne.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9087) (One.mk.{u_4} (Monoid.End.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9087) (MonoidHom.id.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9087))
  - add_right_cancel_iff
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.491 : Add.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.494 : IsRightCancelAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.491] {a : G} {b : G} {c : G}, Iff (Eq.{succ u_1} G (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.491) b a) (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.491) c a)) (Eq.{succ u_1} G b c)
  - mul_self_eq_zero
    Statement: forall {M₀ : Type.{u_1}} [inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416 : MulZeroClass.{u_1} M₀] [inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1419 : NoZeroDivisors.{u_1} M₀ (MulZeroClass.toMul.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416) (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416)] {a : M₀}, Iff (Eq.{succ u_1} M₀ (HMul.hMul.{u_1, u_1, u_1} M₀ M₀ M₀ (instHMul.{u_1} M₀ (MulZeroClass.toMul.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416)) a a) (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416)))) (Eq.{succ u_1} M₀ a (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1416))))
  - mul_eq_one_iff_eq_inv
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4484 : Group.{u_3} G] {a : G} {b : G}, Iff (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4484))))) a b) (OfNat.ofNat.{u_3} G 1 (One.toOfNat1.{u_3} G (InvOneClass.toOne.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4484))))))) (Eq.{succ u_3} G a (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4484)))) b))
  - mul_ne_zero_iff_right
    Statement: forall {M₀ : Type.{u_1}} [inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626 : MulZeroClass.{u_1} M₀] [inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1629 : NoZeroDivisors.{u_1} M₀ (MulZeroClass.toMul.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626) (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626)] {a : M₀} {b : M₀}, (Ne.{succ u_1} M₀ b (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626)))) -> (Iff (Ne.{succ u_1} M₀ (HMul.hMul.{u_1, u_1, u_1} M₀ M₀ M₀ (instHMul.{u_1} M₀ (MulZeroClass.toMul.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626)) a b) (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626)))) (Ne.{succ u_1} M₀ a (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1626)))))
  - IsRightCancelAdd.add_right_cancel
    Statement: forall {G : Type.{u}} {inst._@.Mathlib.Algebra.Group.Defs._hyg.222 : Add.{u} G} [self : IsRightCancelAdd.{u} G inst._@.Mathlib.Algebra.Group.Defs._hyg.222] (a : G) (b : G) (c : G), (Eq.{succ u} G (HAdd.hAdd.{u, u, u} G G G (instHAdd.{u} G inst._@.Mathlib.Algebra.Group.Defs._hyg.222) a b) (HAdd.hAdd.{u, u, u} G G G (instHAdd.{u} G inst._@.Mathlib.Algebra.Group.Defs._hyg.222) c b)) -> (Eq.{succ u} G a c)
  - NonUnitalNonAssocSemiring.zero_mul
    Statement: forall {α : Type.{u}} [self : NonUnitalNonAssocSemiring.{u} α] (a : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α self)) (OfNat.ofNat.{u} α 0 (Zero.toOfNat0.{u} α (AddMonoid.toZero.{u} α (AddCommMonoid.toAddMonoid.{u} α (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} α self))))) a) (OfNat.ofNat.{u} α 0 (Zero.toOfNat0.{u} α (AddMonoid.toZero.{u} α (AddCommMonoid.toAddMonoid.{u} α (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} α self)))))
  - zero_add_eq_id
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.589 : AddZeroClass.{u_4} M], Eq.{succ u_4} (M -> M) (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.597 : M) => HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.589)) (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.589))) x._@.Mathlib.Algebra.Group.Basic._hyg.597) (id.{succ u_4} M)
  - Nat.mul_zero
    Statement: forall (n : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) n (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - AddMonoidHom.map_add
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 : AddZeroClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797 : AddZeroClass.{u_5} N] (f : AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) (a : M) (b : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) f (HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794)) a b)) (HAdd.hAdd.{u_5, u_5, u_5} N N N (instHAdd.{u_5} N (AddZeroClass.toAdd.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797)) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) f a) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6794 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6797) f b))
  - semiconjBy_iff_eq
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.383 : CancelCommMonoid.{u_2} M] {a : M} {x : M} {y : M}, Iff (SemiconjBy.{u_2} M (MulOneClass.toMul.{u_2} M (Monoid.toMulOneClass.{u_2} M (CommMonoid.toMonoid.{u_2} M (CancelCommMonoid.toCommMonoid.{u_2} M inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.383)))) a x y) (Eq.{succ u_2} M x y)
  - zpow_negSucc
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.5500 : DivInvMonoid.{u_1} G] (a : G) (n : Nat), Eq.{succ u_1} G (HPow.hPow.{u_1, 0, u_1} G Int G (instHPow.{u_1, 0} G Int (DivInvMonoid.toZPow.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5500)) a (Int.negSucc n)) (Inv.inv.{u_1} G (DivInvMonoid.toInv.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5500) (HPow.hPow.{u_1, 0, u_1} G Nat G (instHPow.{u_1, 0} G Nat (Monoid.toNatPow.{u_1} G (DivInvMonoid.toMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5500))) a (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))))
  - MonoidHom.instInv.eq_1
    Statement: forall {M : Type.{u_2}} {G : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 : MulOneClass.{u_2} M] [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233 : CommGroup.{u_5} G], Eq.{succ (max u_5 u_2)} (Inv.{max u_5 u_2} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233)))))) (MonoidHom.instInv.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233) (Inv.mk.{max u_2 u_5} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233))))) (fun (f : MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233))))) => MonoidHom.mk'.{u_2, u_5} M G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233) inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (fun (g : M) => Inv.inv.{u_5} G (InvOneClass.toInv.{u_5} G (DivInvOneMonoid.toInvOneClass.{u_5} G (DivisionMonoid.toDivInvOneMonoid.{u_5} G (DivisionCommMonoid.toDivisionMonoid.{u_5} G (CommGroup.toDivisionCommMonoid.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233))))) (DFunLike.coe.{max (succ u_2) (succ u_5), succ u_2, succ u_5} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233))))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => G) (MonoidHom.instFunLike.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233))))) f g)) (MonoidHom.instInv._proof_2.{u_5, u_2} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1227 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1233 f)))
  - ZeroHom.ext
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 : Zero.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269 : Zero.{u_5} N] {{f : ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269}} {{g : ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269}}, (forall (x : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (ZeroHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) f x) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (ZeroHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) g x)) -> (Eq.{max (succ u_4) (succ u_5)} (ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) f g)
  - mul_left_comm
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.656 : CommSemigroup.{u_3} G] (a : G) (b : G) (c : G), Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.656))) a (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.656))) b c)) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.656))) b (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (CommMagma.toMul.{u_3} G (CommSemigroup.toCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.656))) a c))
  - nsmulRec'_succ
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3641 : Add.{u_2} M] [inst._@.Mathlib.Algebra.Group.Defs._hyg.3644 : Zero.{u_2} M] {k : Nat}, (Ne.{1} Nat k (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (m : M), Eq.{succ u_2} M (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3644 inst._@.Mathlib.Algebra.Group.Defs._hyg.3641 (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) k (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) m) (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3641) (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3644 inst._@.Mathlib.Algebra.Group.Defs._hyg.3641 k m) m))
  - zsmul_neg'
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.2901 : SubtractionMonoid.{u_1} α] (a : α) (n : Int), Eq.{succ u_1} α (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2901))) n (Neg.neg.{u_1} α (NegZeroClass.toNeg.{u_1} α (SubNegZeroMonoid.toNegZeroClass.{u_1} α (SubtractionMonoid.toSubNegZeroMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2901))) a)) (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2901))) (Neg.neg.{0} Int Int.instNegInt n) a)
  - Semiring.natCast_succ
    Statement: forall {α : Type.{u}} [self : Semiring.{u} α] (n : Nat), Eq.{succ u} α (NatCast.natCast.{u} α (Semiring.toNatCast.{u} α self) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) n (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)))) (HAdd.hAdd.{u, u, u} α α α (instHAdd.{u} α (AddSemigroup.toAdd.{u} α (AddMonoid.toAddSemigroup.{u} α (AddCommMonoid.toAddMonoid.{u} α (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} α (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} α (Semiring.toNonUnitalSemiring.{u} α self))))))) (NatCast.natCast.{u} α (Semiring.toNatCast.{u} α self) n) (OfNat.ofNat.{u} α 1 (One.toOfNat1.{u} α (Semiring.toOne.{u} α self))))
  - Nat.sub_pos_of_lt
    Statement: forall {m : Nat} {n : Nat}, (LT.lt.{0} Nat instLTNat m n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n m))
  - AddMonoidHom.map_one₂
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} {P : Type.{uP}} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.658 : AddZeroClass.{uM} M} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 : AddZeroClass.{uN} N} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664 : AddCommMonoid.{uP} P} (f : AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.658 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664)))) (n : N), Eq.{succ uP} P (DFunLike.coe.{max (succ uN) (succ uP), succ uN, succ uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (AddMonoidHom.instFunLike.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (DFunLike.coe.{max (max (succ uM) (succ uN)) (succ uP), succ uM, max (succ uN) (succ uP)} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.658 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664)))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddMonoidHom.instFunLike.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.658 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.661 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664)))) f (OfNat.ofNat.{uM} M 0 (Zero.toOfNat0.{uM} M (AddZeroClass.toZero.{uM} M x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.658)))) n) (OfNat.ofNat.{uP} P 0 (Zero.toOfNat0.{uP} P (AddZeroClass.toZero.{uP} P (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.664)))))
  - MulHom.coe_copy_eq
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 : Mul.{u_4} M} {x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493 : Mul.{u_5} N} (f : MulHom.{u_4, u_5} M N x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493) (f' : M -> N) (h : Eq.{max (succ u_4) (succ u_5)} (M -> N) f' (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MulHom.{u_4, u_5} M N x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MulHom.funLike.{u_4, u_5} M N x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493) f)), Eq.{max (succ u_4) (succ u_5)} (MulHom.{u_4, u_5} M N x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493) (MulHom.copy.{u_4, u_5} M N x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6490 x._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6493 f f' h) f
  - MonoidHom.coe_coe
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3741 : MulOneClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3744 : MulOneClass.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3747 : FunLike.{succ u_9, succ u_4, succ u_5} F M N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3752 : MonoidHomClass.{u_9, u_4, u_5} F M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3741 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3744 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3747] (f : F), Eq.{max (succ u_4) (succ u_5)} (M -> N) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3741 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3744) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3741 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3744) (MonoidHomClass.toMonoidHom.{u_4, u_5, u_9} M N F inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3741 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3744 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3747 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3752 f)) (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3747 f)
  - iterate_map_zero
    Statement: forall {M : Type.{u_10}} {F : Type.{u_11}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10093 : Zero.{u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10096 : FunLike.{succ u_11, succ u_10, succ u_10} F M M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10101 : ZeroHomClass.{u_11, u_10, u_10} F M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10093 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10093 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10096] (f : F) (n : Nat), Eq.{succ u_10} M (Nat.iterate.{succ u_10} M (DFunLike.coe.{succ u_11, succ u_10, succ u_10} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => M) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10096 f) n (OfNat.ofNat.{u_10} M 0 (Zero.toOfNat0.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10093))) (OfNat.ofNat.{u_10} M 0 (Zero.toOfNat0.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.10093))
  - Ring.zsmul_zero'
    Statement: forall {R : Type.{u}} [self : Ring.{u} R] (a : R), Eq.{succ u} R (Ring.zsmul.{u} R self (OfNat.ofNat.{0} Int 0 (instOfNat 0)) a) (OfNat.ofNat.{u} R 0 (Zero.toOfNat0.{u} R (AddMonoid.toZero.{u} R (AddCommMonoid.toAddMonoid.{u} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} R (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} R (Semiring.toNonUnitalSemiring.{u} R (Ring.toSemiring.{u} R self))))))))
  - domain_nontrivial
    Statement: forall {M₀ : Type.{u_1}} {M₀' : Type.{u_2}} [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.225 : MulZeroOneClass.{u_1} M₀] [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.228 : Nontrivial.{u_1} M₀] [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.231 : Zero.{u_2} M₀'] [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.234 : One.{u_2} M₀'] (f : M₀' -> M₀), (Eq.{succ u_1} M₀ (f (OfNat.ofNat.{u_2} M₀' 0 (Zero.toOfNat0.{u_2} M₀' inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.231))) (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ (MulZeroOneClass.toMulZeroClass.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.225))))) -> (Eq.{succ u_1} M₀ (f (OfNat.ofNat.{u_2} M₀' 1 (One.toOfNat1.{u_2} M₀' inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.234))) (OfNat.ofNat.{u_1} M₀ 1 (One.toOfNat1.{u_1} M₀ (MulOneClass.toOne.{u_1} M₀ (MulZeroOneClass.toMulOneClass.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.225))))) -> (Nontrivial.{u_2} M₀')
  - nsmulRec'_add_comm
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3713 : AddSemigroup.{u_2} M] [inst._@.Mathlib.Algebra.Group.Defs._hyg.3716 : Zero.{u_2} M] {k : Nat}, (Ne.{1} Nat k (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (m : M), Eq.{succ u_2} M (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3713)) m (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3716 (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3713) k m)) (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3713)) (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3716 (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3713) k m) m))
  - leftInverse_mul_right_inv_mul
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.5559 : Group.{u_3} G] (c : G), Function.LeftInverse.{succ u_3, succ u_3} G G (fun (x : G) => HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5559))))) c x) (fun (x : G) => HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5559))))) (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5559)))) c) x)
  - AddMonoidHom.cancel_left
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 : AddZeroClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 : AddZeroClass.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140 : AddZeroClass.{u_6} P] {g : AddMonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140} {f₁ : AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137} {f₂ : AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137}, (Function.Injective.{succ u_5, succ u_6} N P (DFunLike.coe.{max (succ u_5) (succ u_6), succ u_5, succ u_6} (AddMonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (AddMonoidHom.instFunLike.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140) g)) -> (Iff (Eq.{max (succ u_4) (succ u_6)} (AddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140) (AddMonoidHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140 g f₁) (AddMonoidHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8140 g f₂)) (Eq.{max (succ u_4) (succ u_5)} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8134 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8137) f₁ f₂))
  - Nat.mul_add_div
    Statement: forall {m : Nat}, (GT.gt.{0} Nat instLTNat m (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m x) y) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y m)))
  - sub_self
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6212 : AddGroup.{u_1} G] (a : G), Eq.{succ u_1} G (HSub.hSub.{u_1, u_1, u_1} G G G (instHSub.{u_1} G (SubNegMonoid.toSub.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6212))) a a) (OfNat.ofNat.{u_1} G 0 (Zero.toOfNat0.{u_1} G (AddZeroClass.toZero.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6212))))))
  - mul_left_cancel
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.298 : Mul.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.301 : IsLeftCancelMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.298] {a : G} {b : G} {c : G}, (Eq.{succ u_1} G (HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.298) a b) (HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.298) a c)) -> (Eq.{succ u_1} G b c)
  - pow_zero
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4111 : Monoid.{u_2} M] (a : M), Eq.{succ u_2} M (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4111)) a (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{u_2} M 1 (One.toOfNat1.{u_2} M (MulOneClass.toOne.{u_2} M (Monoid.toMulOneClass.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4111))))
  - Nat.mul_mul_mul_comm
    Statement: forall (a : Nat) (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - CancelCommMonoidWithZero.toIsLeftCancelMulZero
    Statement: forall {M₀ : Type.{u_2}} [self : CancelCommMonoidWithZero.{u_2} M₀], IsLeftCancelMulZero.{u_2} M₀ (Semigroup.toMul.{u_2} M₀ (Monoid.toSemigroup.{u_2} M₀ (CommMonoid.toMonoid.{u_2} M₀ (CommMonoidWithZero.toCommMonoid.{u_2} M₀ (CancelCommMonoidWithZero.toCommMonoidWithZero.{u_2} M₀ self))))) (CommMonoidWithZero.toZero.{u_2} M₀ (CancelCommMonoidWithZero.toCommMonoidWithZero.{u_2} M₀ self))
  - conj_eq_zero_iff
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4888 : AddGroup.{u_3} G] {a : G} {b : G}, Iff (Eq.{succ u_3} G (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4888))))) (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4888))))) a b) (Neg.neg.{u_3} G (NegZeroClass.toNeg.{u_3} G (SubNegZeroMonoid.toNegZeroClass.{u_3} G (SubtractionMonoid.toSubNegZeroMonoid.{u_3} G (AddGroup.toSubtractionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4888)))) a)) (OfNat.ofNat.{u_3} G 0 (Zero.toOfNat0.{u_3} G (NegZeroClass.toZero.{u_3} G (SubNegZeroMonoid.toNegZeroClass.{u_3} G (SubtractionMonoid.toSubNegZeroMonoid.{u_3} G (AddGroup.toSubtractionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4888))))))) (Eq.{succ u_3} G b (OfNat.ofNat.{u_3} G 0 (Zero.toOfNat0.{u_3} G (NegZeroClass.toZero.{u_3} G (SubNegZeroMonoid.toNegZeroClass.{u_3} G (SubtractionMonoid.toSubNegZeroMonoid.{u_3} G (AddGroup.toSubtractionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4888)))))))
  - AddMonoidHom.comp_zero
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 : AddZeroClass.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811 : AddZeroClass.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814 : AddZeroClass.{u_6} P] (f : AddMonoidHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814), Eq.{max (succ u_4) (succ u_6)} (AddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814) (AddMonoidHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814 f (OfNat.ofNat.{max u_4 u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811) 0 (Zero.toOfNat0.{max u_4 u_5} (AddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811) (instZeroAddMonoidHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9811)))) (OfNat.ofNat.{max u_4 u_6} (AddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814) 0 (Zero.toOfNat0.{max u_4 u_6} (AddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814) (instZeroAddMonoidHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9808 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9814)))
  - AddSemiconjBy.transitive
    Statement: forall {S : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.157 : AddSemigroup.{u_1} S], Transitive.{succ u_1} S (fun (a : S) (b : S) => Exists.{succ u_1} S (fun (c : S) => AddSemiconjBy.{u_1} S (AddSemigroup.toAdd.{u_1} S inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.157) c a b))
  - pred_ne_self
    Statement: forall {α : Type.{u_3}} [inst._@.Mathlib.Algebra.Ring.Basic._hyg.813 : NonAssocRing.{u_3} α] [inst._@.Mathlib.Algebra.Ring.Basic._hyg.816 : Nontrivial.{u_3} α] (a : α), Ne.{succ u_3} α (HSub.hSub.{u_3, u_3, u_3} α α α (instHSub.{u_3} α (SubNegMonoid.toSub.{u_3} α (AddGroup.toSubNegMonoid.{u_3} α (AddGroupWithOne.toAddGroup.{u_3} α (AddCommGroupWithOne.toAddGroupWithOne.{u_3} α (NonAssocRing.toAddCommGroupWithOne.{u_3} α inst._@.Mathlib.Algebra.Ring.Basic._hyg.813)))))) a (OfNat.ofNat.{u_3} α 1 (One.toOfNat1.{u_3} α (AddMonoidWithOne.toOne.{u_3} α (AddGroupWithOne.toAddMonoidWithOne.{u_3} α (AddCommGroupWithOne.toAddGroupWithOne.{u_3} α (NonAssocRing.toAddCommGroupWithOne.{u_3} α inst._@.Mathlib.Algebra.Ring.Basic._hyg.813))))))) a
  - AddMonoid.End.mulRight_apply_apply
    Statement: forall {R : Type.{u_1}} [inst._@.Mathlib.Algebra.Ring.Basic._hyg.587 : NonUnitalNonAssocSemiring.{u_1} R] (y : R) (x : R), Eq.{succ u_1} R (DFunLike.coe.{succ u_1, succ u_1, succ u_1} (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => R) (AddMonoidHom.instFunLike.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (DFunLike.coe.{succ u_1, succ u_1, succ u_1} (AddMonoidHom.{u_1, u_1} R (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))) (AddMonoid.toAddZeroClass.{u_1} (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddCommMonoid.toAddMonoid.{u_1} (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddMonoid.End.instAddCommMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddMonoidHom.instFunLike.{u_1, u_1} R (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))) (AddMonoid.toAddZeroClass.{u_1} (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddCommMonoid.toAddMonoid.{u_1} (AddMonoid.End.{u_1} R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587)))) (AddMonoid.End.instAddCommMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))))) (AddMonoid.End.mulRight.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587) y) x) (HMul.hMul.{u_1, u_1, u_1} R R R (instHMul.{u_1} R (Distrib.toMul.{u_1} R (NonUnitalNonAssocSemiring.toDistrib.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.587))) x y)
  - Distrib.right_distrib
    Statement: forall {R : Type.{u_1}} [self : Distrib.{u_1} R] (a : R) (b : R) (c : R), Eq.{succ u_1} R (HMul.hMul.{u_1, u_1, u_1} R R R (instHMul.{u_1} R (Distrib.toMul.{u_1} R self)) (HAdd.hAdd.{u_1, u_1, u_1} R R R (instHAdd.{u_1} R (Distrib.toAdd.{u_1} R self)) a b) c) (HAdd.hAdd.{u_1, u_1, u_1} R R R (instHAdd.{u_1} R (Distrib.toAdd.{u_1} R self)) (HMul.hMul.{u_1, u_1, u_1} R R R (instHMul.{u_1} R (Distrib.toMul.{u_1} R self)) a c) (HMul.hMul.{u_1, u_1, u_1} R R R (instHMul.{u_1} R (Distrib.toMul.{u_1} R self)) b c))
  - neg_sub_left
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.2504 : SubtractionMonoid.{u_1} α] (a : α) (b : α), Eq.{succ u_1} α (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2504))) (Neg.neg.{u_1} α (SubNegMonoid.toNeg.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2504)) a) b) (Neg.neg.{u_1} α (SubNegMonoid.toNeg.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2504)) (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.2504))))) b a))
  - nsmul_add_comm
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4413 : AddMonoid.{u_2} M] (a : M) (m : Nat) (n : Nat), Eq.{succ u_2} M (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M (AddZeroClass.toAdd.{u_2} M (AddMonoid.toAddZeroClass.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413))) (HSMul.hSMul.{0, u_2, u_2} Nat M M (instHSMul.{0, u_2} Nat M (AddMonoid.toNatSMul.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413)) m a) (HSMul.hSMul.{0, u_2, u_2} Nat M M (instHSMul.{0, u_2} Nat M (AddMonoid.toNatSMul.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413)) n a)) (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M (AddZeroClass.toAdd.{u_2} M (AddMonoid.toAddZeroClass.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413))) (HSMul.hSMul.{0, u_2, u_2} Nat M M (instHSMul.{0, u_2} Nat M (AddMonoid.toNatSMul.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413)) n a) (HSMul.hSMul.{0, u_2, u_2} Nat M M (instHSMul.{0, u_2} Nat M (AddMonoid.toNatSMul.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.4413)) m a))
  - add_left_inj
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.545 : Add.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.548 : IsRightCancelAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.545] (a : G) {b : G} {c : G}, Iff (Eq.{succ u_1} G (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.545) b a) (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.545) c a)) (Eq.{succ u_1} G b c)
  - NonUnitalCommSemiring.mul_comm
    Statement: forall {α : Type.{u}} [self : NonUnitalCommSemiring.{u} α] (a : α) (b : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} α (NonUnitalCommSemiring.toNonUnitalSemiring.{u} α self)))) a b) (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocSemiring.toMul.{u} α (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} α (NonUnitalCommSemiring.toNonUnitalSemiring.{u} α self)))) b a)
  - MonoidHom.instDiv.eq_1
    Statement: forall {M : Type.{u_2}} {G : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 : MulOneClass.{u_2} M] [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446 : CommGroup.{u_5} G], Eq.{succ (max u_5 u_2)} (Div.{max u_5 u_2} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446)))))) (MonoidHom.instDiv.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446) (Div.mk.{max u_2 u_5} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) (fun (f : MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) (g : MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) => MonoidHom.mk'.{u_2, u_5} M G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446) inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (fun (x : M) => HDiv.hDiv.{u_5, u_5, u_5} G G G (instHDiv.{u_5} G (DivInvMonoid.toDiv.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446)))) (DFunLike.coe.{max (succ u_2) (succ u_5), succ u_2, succ u_5} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => G) (MonoidHom.instFunLike.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) f x) (DFunLike.coe.{max (succ u_2) (succ u_5), succ u_2, succ u_5} (MonoidHom.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => G) (MonoidHom.instFunLike.{u_2, u_5} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G (CommGroup.toGroup.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446))))) g x)) (MonoidHom.instDiv._proof_1.{u_5, u_2} M G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1440 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1446 f g)))
  - mul_left_surjective
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4173 : Group.{u_3} G] (a : G), Function.Surjective.{succ u_3, succ u_3} G G (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.4187 : G) => HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4173))))) a x._@.Mathlib.Algebra.Group.Basic._hyg.4187)
  - IsDomain.to_noZeroDivisors
    Statement: forall (α : Type.{u_3}) [inst._@.Mathlib.Algebra.Ring.Basic._hyg.1050 : Semiring.{u_3} α] [inst._@.Mathlib.Algebra.Ring.Basic._hyg.1053 : IsDomain.{u_3} α inst._@.Mathlib.Algebra.Ring.Basic._hyg.1050], NoZeroDivisors.{u_3} α (Distrib.toMul.{u_3} α (NonUnitalNonAssocSemiring.toDistrib.{u_3} α (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u_3} α (Semiring.toNonAssocSemiring.{u_3} α inst._@.Mathlib.Algebra.Ring.Basic._hyg.1050)))) (MulZeroClass.toZero.{u_3} α (NonUnitalNonAssocSemiring.toMulZeroClass.{u_3} α (NonAssocSemiring.toNonUnitalNonAssocSemiring.{u_3} α (Semiring.toNonAssocSemiring.{u_3} α inst._@.Mathlib.Algebra.Ring.Basic._hyg.1050))))
  - neg_add'
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.3487 : SubtractionCommMonoid.{u_1} α] (a : α) (b : α), Eq.{succ u_1} α (Neg.neg.{u_1} α (NegZeroClass.toNeg.{u_1} α (SubNegZeroMonoid.toNegZeroClass.{u_1} α (SubtractionMonoid.toSubNegZeroMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3487)))) (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (SubNegMonoid.toAddMonoid.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3487)))))) a b)) (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3487)))) (Neg.neg.{u_1} α (NegZeroClass.toNeg.{u_1} α (SubNegZeroMonoid.toNegZeroClass.{u_1} α (SubtractionMonoid.toSubNegZeroMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3487)))) a) b)
  - LeftCancelSemigroup.mul_left_cancel
    Statement: forall {G : Type.{u}} [self : LeftCancelSemigroup.{u} G] (a : G) (b : G) (c : G), (Eq.{succ u} G (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (LeftCancelSemigroup.toSemigroup.{u} G self))) a b) (HMul.hMul.{u, u, u} G G G (instHMul.{u} G (Semigroup.toMul.{u} G (LeftCancelSemigroup.toSemigroup.{u} G self))) a c)) -> (Eq.{succ u} G b c)
  - div_mul_div_comm
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.3949 : DivisionCommMonoid.{u_1} α] (a : α) (b : α) (c : α) (d : α), Eq.{succ u_1} α (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (MulOneClass.toMul.{u_1} α (Monoid.toMulOneClass.{u_1} α (DivInvMonoid.toMonoid.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))))) (HDiv.hDiv.{u_1, u_1, u_1} α α α (instHDiv.{u_1} α (DivInvMonoid.toDiv.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))) a b) (HDiv.hDiv.{u_1, u_1, u_1} α α α (instHDiv.{u_1} α (DivInvMonoid.toDiv.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))) c d)) (HDiv.hDiv.{u_1, u_1, u_1} α α α (instHDiv.{u_1} α (DivInvMonoid.toDiv.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))) (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (MulOneClass.toMul.{u_1} α (Monoid.toMulOneClass.{u_1} α (DivInvMonoid.toMonoid.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))))) a c) (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (MulOneClass.toMul.{u_1} α (Monoid.toMulOneClass.{u_1} α (DivInvMonoid.toMonoid.{u_1} α (DivisionMonoid.toDivInvMonoid.{u_1} α (DivisionCommMonoid.toDivisionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.3949)))))) b d))
  - commute_iff_eq
    Statement: forall {S : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.31 : Mul.{u_3} S] (a : S) (b : S), Iff (Commute.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.31 a b) (Eq.{succ u_3} S (HMul.hMul.{u_3, u_3, u_3} S S S (instHMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.31) a b) (HMul.hMul.{u_3, u_3, u_3} S S S (instHMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.31) b a))
  - inv_comp_inv
    Statement: forall (G : Type.{u_3}) [inst._@.Mathlib.Algebra.Group.Basic._hyg.2019 : InvolutiveInv.{u_3} G], Eq.{succ u_3} (G -> G) (Function.comp.{succ u_3, succ u_3, succ u_3} G G G (Inv.inv.{u_3} G (InvolutiveInv.toInv.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.2019)) (Inv.inv.{u_3} G (InvolutiveInv.toInv.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.2019))) (id.{succ u_3} G)
  - Nat.mul_mod_mod
    Statement: forall (m : Nat) (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) m n) l)
  - NonUnitalNonAssocRing.left_distrib
    Statement: forall {α : Type.{u}} [self : NonUnitalNonAssocRing.{u} α] (a : α) (b : α) (c : α), Eq.{succ u} α (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocRing.toMul.{u} α self)) a (HAdd.hAdd.{u, u, u} α α α (instHAdd.{u} α (AddSemigroup.toAdd.{u} α (AddMonoid.toAddSemigroup.{u} α (SubNegMonoid.toAddMonoid.{u} α (AddGroup.toSubNegMonoid.{u} α (AddCommGroup.toAddGroup.{u} α (NonUnitalNonAssocRing.toAddCommGroup.{u} α self))))))) b c)) (HAdd.hAdd.{u, u, u} α α α (instHAdd.{u} α (AddSemigroup.toAdd.{u} α (AddMonoid.toAddSemigroup.{u} α (SubNegMonoid.toAddMonoid.{u} α (AddGroup.toSubNegMonoid.{u} α (AddCommGroup.toAddGroup.{u} α (NonUnitalNonAssocRing.toAddCommGroup.{u} α self))))))) (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocRing.toMul.{u} α self)) a b) (HMul.hMul.{u, u, u} α α α (instHMul.{u} α (NonUnitalNonAssocRing.toMul.{u} α self)) a c))
  - eq_inv_mul_of_mul_eq
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4260 : Group.{u_3} G] {a : G} {b : G} {c : G}, (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4260))))) b a) c) -> (Eq.{succ u_3} G a (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4260))))) (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4260)))) b) c))
  - Commute.pow_left
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.443 : Monoid.{u_2} M] {a : M} {b : M}, (Commute.{u_2} M (MulOneClass.toMul.{u_2} M (Monoid.toMulOneClass.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.443)) a b) -> (forall (n : Nat), Commute.{u_2} M (MulOneClass.toMul.{u_2} M (Monoid.toMulOneClass.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.443)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.443)) a n) b)
  - eq_div_of_mul_eq''
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.6620 : CommGroup.{u_3} G] {a : G} {b : G} {c : G}, (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6620)))))) c a) b) -> (Eq.{succ u_3} G a (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6620)))) b c))
  - zpow_natCast
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.5439 : DivInvMonoid.{u_1} G] (a : G) (n : Nat), Eq.{succ u_1} G (HPow.hPow.{u_1, 0, u_1} G Int G (instHPow.{u_1, 0} G Int (DivInvMonoid.toZPow.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5439)) a (Nat.cast.{0} Int instNatCastInt n)) (HPow.hPow.{u_1, 0, u_1} G Nat G (instHPow.{u_1, 0} G Nat (Monoid.toNatPow.{u_1} G (DivInvMonoid.toMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5439))) a n)
  - MulHom.ext_iff
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 : Mul.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516 : Mul.{u_5} N] {f : MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516} {g : MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516}, Iff (Eq.{max (succ u_4) (succ u_5)} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516) f g) (forall (x : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MulHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516) f x) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MulHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5513 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5516) g x))
  - ne_zero_of_map
    Statement: forall {R : Type.{u_10}} {S : Type.{u_11}} {F : Type.{u_12}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1758 : Zero.{u_10} R] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1761 : Zero.{u_11} S] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1764 : FunLike.{succ u_12, succ u_10, succ u_11} F R S] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1769 : ZeroHomClass.{u_12, u_10, u_11} F R S inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1758 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1761 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1764] {f : F} {x : R}, (Ne.{succ u_11} S (DFunLike.coe.{succ u_12, succ u_10, succ u_11} F R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => S) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1764 f x) (OfNat.ofNat.{u_11} S 0 (Zero.toOfNat0.{u_11} S inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1761))) -> (Ne.{succ u_10} R x (OfNat.ofNat.{u_10} R 0 (Zero.toOfNat0.{u_10} R inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1758)))
  - NeZero.one
    Statement: forall {M₀ : Type.{u_1}} [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.26 : MulZeroOneClass.{u_1} M₀] [inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.29 : Nontrivial.{u_1} M₀], NeZero.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ (MulZeroOneClass.toMulZeroClass.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.26)) (OfNat.ofNat.{u_1} M₀ 1 (One.toOfNat1.{u_1} M₀ (MulOneClass.toOne.{u_1} M₀ (MulZeroOneClass.toMulOneClass.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.NeZero._hyg.26))))
  - pow_eq_pow_mod
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1030 : Monoid.{u_4} M] {a : M} {n : Nat} (m : Nat), (Eq.{succ u_4} M (HPow.hPow.{u_4, 0, u_4} M Nat M (instHPow.{u_4, 0} M Nat (Monoid.toNatPow.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) a n) (OfNat.ofNat.{u_4} M 1 (One.toOfNat1.{u_4} M (MulOneClass.toOne.{u_4} M (Monoid.toMulOneClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030))))) -> (Eq.{succ u_4} M (HPow.hPow.{u_4, 0, u_4} M Nat M (instHPow.{u_4, 0} M Nat (Monoid.toNatPow.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) a m) (HPow.hPow.{u_4, 0, u_4} M Nat M (instHPow.{u_4, 0} M Nat (Monoid.toNatPow.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1030)) a (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) m n)))
  - natCast_zsmul
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.5439 : SubNegMonoid.{u_1} G] (a : G) (n : Nat), Eq.{succ u_1} G (HSMul.hSMul.{0, u_1, u_1} Int G G (instHSMul.{0, u_1} Int G (SubNegMonoid.toZSMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5439)) (Nat.cast.{0} Int instNatCastInt n) a) (HSMul.hSMul.{0, u_1, u_1} Nat G G (instHSMul.{0, u_1} Nat G (AddMonoid.toNatSMul.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.5439))) n a)
  - Commute.mul_left
    Statement: forall {S : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.242 : Semigroup.{u_3} S] {a : S} {b : S} {c : S}, (Commute.{u_3} S (Semigroup.toMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.242) a c) -> (Commute.{u_3} S (Semigroup.toMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.242) b c) -> (Commute.{u_3} S (Semigroup.toMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.242) (HMul.hMul.{u_3, u_3, u_3} S S S (instHMul.{u_3} S (Semigroup.toMul.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.242)) a b) c)
  - Monoid.End.eq_1
    Statement: forall (M : Type.{u_4}) [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9022 : MulOneClass.{u_4} M], Eq.{succ (succ u_4)} Type.{u_4} (Monoid.End.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9022) (MonoidHom.{u_4, u_4} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9022 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9022)
  - OneHom.ext_iff
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 : One.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269 : One.{u_5} N] {f : OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269} {g : OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269}, Iff (Eq.{max (succ u_4) (succ u_5)} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) f g) (forall (x : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (OneHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) f x) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (OneHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5266 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.5269) g x))
  - neg_add_cancel_left
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6228 : AddGroup.{u_1} G] (a : G) (b : G), Eq.{succ u_1} G (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G (AddZeroClass.toAdd.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6228))))) (Neg.neg.{u_1} G (SubNegMonoid.toNeg.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6228)) a) (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G (AddZeroClass.toAdd.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6228))))) a b)) b
  - AddGroup.neg_add_cancel
    Statement: forall {A : Type.{u}} [self : AddGroup.{u} A] (a : A), Eq.{succ u} A (HAdd.hAdd.{u, u, u} A A A (instHAdd.{u} A (AddSemigroup.toAdd.{u} A (AddMonoid.toAddSemigroup.{u} A (SubNegMonoid.toAddMonoid.{u} A (AddGroup.toSubNegMonoid.{u} A self))))) (Neg.neg.{u} A (SubNegMonoid.toNeg.{u} A (AddGroup.toSubNegMonoid.{u} A self)) a) a) (OfNat.ofNat.{u} A 0 (Zero.toOfNat0.{u} A (AddMonoid.toZero.{u} A (SubNegMonoid.toAddMonoid.{u} A (AddGroup.toSubNegMonoid.{u} A self)))))
  - Nat.succ_min_succ
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ x) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat x y))
  - map_mul
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2654 : Mul.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2657 : Mul.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2660 : FunLike.{succ u_9, succ u_4, succ u_5} F M N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2665 : MulHomClass.{u_9, u_4, u_5} F M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2654 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2657 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2660] (f : F) (x : M) (y : M), Eq.{succ u_5} N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2660 f (HMul.hMul.{u_4, u_4, u_4} M M M (instHMul.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2654) x y)) (HMul.hMul.{u_5, u_5, u_5} N N N (instHMul.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2657) (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2660 f x) (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2660 f y))
  - neg_eq_of_add_eq_zero_left
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6018 : SubtractionMonoid.{u_1} G] {a : G} {b : G}, (Eq.{succ u_1} G (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G (AddZeroClass.toAdd.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (SubtractionMonoid.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6018))))) a b) (OfNat.ofNat.{u_1} G 0 (Zero.toOfNat0.{u_1} G (AddZeroClass.toZero.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (SubtractionMonoid.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6018))))))) -> (Eq.{succ u_1} G (Neg.neg.{u_1} G (SubNegMonoid.toNeg.{u_1} G (SubtractionMonoid.toSubNegMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6018)) b) a)
  - distrib_three_right
    Statement: forall {R : Type.{v}} [inst._@.Mathlib.Algebra.Ring.Defs._hyg.256 : Mul.{v} R] [inst._@.Mathlib.Algebra.Ring.Defs._hyg.259 : Add.{v} R] [inst._@.Mathlib.Algebra.Ring.Defs._hyg.262 : RightDistribClass.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.256 inst._@.Mathlib.Algebra.Ring.Defs._hyg.259] (a : R) (b : R) (c : R) (d : R), Eq.{succ v} R (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.256) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.259) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.259) a b) c) d) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.259) (HAdd.hAdd.{v, v, v} R R R (instHAdd.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.259) (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.256) a d) (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.256) b d)) (HMul.hMul.{v, v, v} R R R (instHMul.{v} R inst._@.Mathlib.Algebra.Ring.Defs._hyg.256) c d))
  - AddMonoidHom.mk.sizeOf_spec
    Statement: forall {M : Type.{u_10}} {N : Type.{u_11}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 : AddZeroClass.{u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 : AddZeroClass.{u_11} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.730 : SizeOf.{succ u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.731 : SizeOf.{succ u_11} N] (toZeroHom : ZeroHom.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) (map_add' : forall (x : M) (y : M), Eq.{succ u_11} N (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom (HAdd.hAdd.{u_10, u_10, u_10} M M M (instHAdd.{u_10} M (AddZeroClass.toAdd.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709)) x y)) (HAdd.hAdd.{u_11, u_11, u_11} N N N (instHAdd.{u_11} N (AddZeroClass.toAdd.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom x) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom y))), Eq.{1} Nat (SizeOf.sizeOf.{max (succ u_10) (succ u_11)} (AddMonoidHom.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) (AddMonoidHom._sizeOf_inst.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.730 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.731) (AddMonoidHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 toZeroHom map_add')) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (SizeOf.sizeOf.{max (succ u_10) (succ u_11)} (ZeroHom.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) (ZeroHom._sizeOf_inst.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.730 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.731) toZeroHom))
  - mul_eq_zero_of_right
    Statement: forall {M₀ : Type.{u_1}} [inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1212 : MulZeroClass.{u_1} M₀] (a : M₀) {b : M₀}, (Eq.{succ u_1} M₀ b (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1212)))) -> (Eq.{succ u_1} M₀ (HMul.hMul.{u_1, u_1, u_1} M₀ M₀ M₀ (instHMul.{u_1} M₀ (MulZeroClass.toMul.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1212)) a b) (OfNat.ofNat.{u_1} M₀ 0 (Zero.toOfNat0.{u_1} M₀ (MulZeroClass.toZero.{u_1} M₀ inst._@.Mathlib.Algebra.GroupWithZero.Defs._hyg.1212))))
  - nsmulRec'_two_add
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.3678 : AddSemigroup.{u_2} M] [inst._@.Mathlib.Algebra.Group.Defs._hyg.3681 : Zero.{u_2} M] (k : Nat) (m : M), Eq.{succ u_2} M (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3681 (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3678) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (OfNat.ofNat.{0} Nat 2 (instOfNatNat 2)) k) m) (nsmulRec'.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3681 (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3678) k (HAdd.hAdd.{u_2, u_2, u_2} M M M (instHAdd.{u_2} M (AddSemigroup.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Defs._hyg.3678)) m m))
  - map_add_neg
    Statement: forall {G : Type.{u_7}} {H : Type.{u_8}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4169 : FunLike.{succ u_9, succ u_7, succ u_8} F G H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4174 : AddGroup.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4177 : SubtractionMonoid.{u_8} H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4180 : AddMonoidHomClass.{u_9, u_7, u_8} F G H (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4174))) (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4177))) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4169] (f : F) (a : G) (b : G), Eq.{succ u_8} H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4169 f (HAdd.hAdd.{u_7, u_7, u_7} G G G (instHAdd.{u_7} G (AddZeroClass.toAdd.{u_7} G (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4174))))) a (Neg.neg.{u_7} G (SubNegMonoid.toNeg.{u_7} G (AddGroup.toSubNegMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4174)) b))) (HAdd.hAdd.{u_8, u_8, u_8} H H H (instHAdd.{u_8} H (AddZeroClass.toAdd.{u_8} H (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4177))))) (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4169 f a) (Neg.neg.{u_8} H (SubNegMonoid.toNeg.{u_8} H (SubtractionMonoid.toSubNegMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4177)) (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.4169 f b)))
  - neg_add_cancel_comm
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6643 : AddCommGroup.{u_1} G] (a : G) (b : G), Eq.{succ u_1} G (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G (AddZeroClass.toAdd.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G (AddCommGroup.toAddGroup.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6643)))))) (HAdd.hAdd.{u_1, u_1, u_1} G G G (instHAdd.{u_1} G (AddZeroClass.toAdd.{u_1} G (AddMonoid.toAddZeroClass.{u_1} G (SubNegMonoid.toAddMonoid.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G (AddCommGroup.toAddGroup.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6643)))))) (Neg.neg.{u_1} G (SubNegMonoid.toNeg.{u_1} G (AddGroup.toSubNegMonoid.{u_1} G (AddCommGroup.toAddGroup.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6643))) a) b) a) b
  - map_comp_sub'
    Statement: forall {ι : Type.{u_1}} {G : Type.{u_7}} {H : Type.{u_8}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 : FunLike.{succ u_9, succ u_7, succ u_8} F G H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3963 : SubNegMonoid.{u_7} G] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3966 : SubNegMonoid.{u_8} H] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3969 : AddHomClass.{u_9, u_7, u_8} F G H (AddZeroClass.toAdd.{u_7} G (AddMonoid.toAddZeroClass.{u_7} G (SubNegMonoid.toAddMonoid.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3963))) (AddZeroClass.toAdd.{u_8} H (AddMonoid.toAddZeroClass.{u_8} H (SubNegMonoid.toAddMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3966))) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958] (f : F), (forall (a : G), Eq.{succ u_8} H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 f (Neg.neg.{u_7} G (SubNegMonoid.toNeg.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3963) a)) (Neg.neg.{u_8} H (SubNegMonoid.toNeg.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3966) (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 f a))) -> (forall (g : ι -> G) (h : ι -> G), Eq.{max (succ u_1) (succ u_8)} (ι -> H) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 f) (HSub.hSub.{max u_1 u_7, max u_1 u_7, max u_1 u_7} (ι -> G) (ι -> G) (ι -> G) (instHSub.{max u_1 u_7} (ι -> G) (Pi.instSub.{u_1, u_7} ι (fun (a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3994 : ι) => G) (fun (i : ι) => SubNegMonoid.toSub.{u_7} G inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3963))) g h)) (HSub.hSub.{max u_1 u_8, max u_1 u_8, max u_1 u_8} (ι -> H) (ι -> H) (ι -> H) (instHSub.{max u_1 u_8} (ι -> H) (Pi.instSub.{u_1, u_8} ι (fun (a._@.Init.Prelude._hyg.27 : ι) => H) (fun (i : ι) => SubNegMonoid.toSub.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3966))) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 f) g) (Function.comp.{succ u_1, succ u_7, succ u_8} ι G H (DFunLike.coe.{succ u_9, succ u_7, succ u_8} F G (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : G) => H) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.3958 f) h)))
  - mul_left_injective
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.520 : Mul.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.523 : IsRightCancelMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.520] (a : G), Function.Injective.{succ u_1, succ u_1} G G (fun (x._@.Mathlib.Algebra.Group.Defs._hyg.533 : G) => HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.520) x._@.Mathlib.Algebra.Group.Defs._hyg.533 a)
  - map_comp_add
    Statement: forall {ι : Type.{u_1}} {M : Type.{u_4}} {N : Type.{u_5}} {F : Type.{u_9}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2705 : Add.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2708 : Add.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2711 : FunLike.{succ u_9, succ u_4, succ u_5} F M N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2716 : AddHomClass.{u_9, u_4, u_5} F M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2705 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2708 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2711] (f : F) (g : ι -> M) (h : ι -> M), Eq.{max (succ u_1) (succ u_5)} (ι -> N) (Function.comp.{succ u_1, succ u_4, succ u_5} ι M N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2711 f) (HAdd.hAdd.{max u_1 u_4, max u_1 u_4, max u_1 u_4} (ι -> M) (ι -> M) (ι -> M) (instHAdd.{max u_1 u_4} (ι -> M) (Pi.instAdd.{u_1, u_4} ι (fun (a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2722 : ι) => M) (fun (i : ι) => inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2705))) g h)) (HAdd.hAdd.{max u_1 u_5, max u_1 u_5, max u_1 u_5} (ι -> N) (ι -> N) (ι -> N) (instHAdd.{max u_1 u_5} (ι -> N) (Pi.instAdd.{u_1, u_5} ι (fun (a._@.Init.Prelude._hyg.27 : ι) => N) (fun (i : ι) => inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2708))) (Function.comp.{succ u_1, succ u_4, succ u_5} ι M N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2711 f) g) (Function.comp.{succ u_1, succ u_4, succ u_5} ι M N (DFunLike.coe.{succ u_9, succ u_4, succ u_5} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2711 f) h))
  - instInhabitedOneHom.eq_1
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 : One.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688 : One.{u_5} N], Eq.{max 1 (succ u_5) (succ u_4)} (Inhabited.{max (succ u_5) (succ u_4)} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688)) (instInhabitedOneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688) (Inhabited.mk.{max (succ u_4) (succ u_5)} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688) (OfNat.ofNat.{max u_4 u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688) 1 (One.toOfNat1.{max u_4 u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688) (instOneOneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9685 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.9688))))
  - eq_sub_of_add_eq
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.5036 : AddGroup.{u_3} G] {a : G} {b : G} {c : G}, (Eq.{succ u_3} G (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddZeroClass.toAdd.{u_3} G (AddMonoid.toAddZeroClass.{u_3} G (SubNegMonoid.toAddMonoid.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5036))))) a c) b) -> (Eq.{succ u_3} G a (HSub.hSub.{u_3, u_3, u_3} G G G (instHSub.{u_3} G (SubNegMonoid.toSub.{u_3} G (AddGroup.toSubNegMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5036))) b c))
  - Ring.zsmul_succ'
    Statement: forall {R : Type.{u}} [self : Ring.{u} R] (n : Nat) (a : R), Eq.{succ u} R (Ring.zsmul.{u} R self (Nat.cast.{0} Int instNatCastInt (Nat.succ n)) a) (HAdd.hAdd.{u, u, u} R R R (instHAdd.{u} R (AddSemigroup.toAdd.{u} R (AddMonoid.toAddSemigroup.{u} R (AddCommMonoid.toAddMonoid.{u} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u} R (NonUnitalSemiring.toNonUnitalNonAssocSemiring.{u} R (Semiring.toNonUnitalSemiring.{u} R (Ring.toSemiring.{u} R self)))))))) (Ring.zsmul.{u} R self (Nat.cast.{0} Int instNatCastInt n) a) a)
  - OneHom.inverse_apply
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600 : One.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603 : One.{u_5} N] (f : OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603) (g : N -> M) (h₁ : Function.LeftInverse.{succ u_4, succ u_5} M N g (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (OneHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (OneHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603) f)) (a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8609 : N), Eq.{succ u_4} M (DFunLike.coe.{max (succ u_5) (succ u_4), succ u_5, succ u_4} (OneHom.{u_5, u_4} N M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => M) (OneHom.funLike.{u_5, u_4} N M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600) (OneHom.inverse.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8600 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8603 f g h₁) a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8609) (g a._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8609)
  - CommGroup.ofIsMulCommutative.eq_1
    Statement: forall {G : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6805 : Group.{u_2} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.6808 : IsMulCommutative.{u_2} G (MulOneClass.toMul.{u_2} G (Monoid.toMulOneClass.{u_2} G (DivInvMonoid.toMonoid.{u_2} G (Group.toDivInvMonoid.{u_2} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6805))))], Eq.{succ u_2} (CommGroup.{u_2} G) (CommGroup.ofIsMulCommutative.{u_2} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6805 inst._@.Mathlib.Algebra.Group.Defs._hyg.6808) (CommGroup.mk.{u_2} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6805 (CommGroup.ofIsMulCommutative._proof_1.{u_2} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6805 inst._@.Mathlib.Algebra.Group.Defs._hyg.6808))
  - mul_inv_eq_mul_inv_iff_mul_eq_mul
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.7143 : CommGroup.{u_3} G] {a : G} {b : G} {c : G} {d : G}, Iff (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143)))))) a (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (DivisionCommMonoid.toDivisionMonoid.{u_3} G (CommGroup.toDivisionCommMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143))))) b)) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143)))))) c (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (DivisionCommMonoid.toDivisionMonoid.{u_3} G (CommGroup.toDivisionCommMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143))))) d))) (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143)))))) a d) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.7143)))))) c b))
  - zpowRec.eq_2
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4747 : One.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.4750 : Mul.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.4753 : Inv.{u_1} G] (npow : Nat -> G -> G) (x._@.Mathlib.Algebra.Group.Defs._hyg.4773 : G) (n : Nat), Eq.{succ u_1} G (zpowRec.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4747 inst._@.Mathlib.Algebra.Group.Defs._hyg.4750 inst._@.Mathlib.Algebra.Group.Defs._hyg.4753 npow (Int.negSucc n) x._@.Mathlib.Algebra.Group.Defs._hyg.4773) (Inv.inv.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4753 (npow (Nat.succ n) x._@.Mathlib.Algebra.Group.Defs._hyg.4773))
  - comp_mul_left
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.340 : Semigroup.{u_1} α] (x : α) (y : α), Eq.{succ u_1} (α -> α) (Function.comp.{succ u_1, succ u_1, succ u_1} α α α (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.352 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.340)) x x._@.Mathlib.Algebra.Group.Basic._hyg.352) (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.363 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.340)) y x._@.Mathlib.Algebra.Group.Basic._hyg.363)) (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.374 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.340)) (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.340)) x y) x._@.Mathlib.Algebra.Group.Basic._hyg.374)
  - zsmul_sub
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4083 : SubtractionCommMonoid.{u_1} α] (a : α) (b : α) (n : Int), Eq.{succ u_1} α (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4083)))) n (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4083)))) a b)) (HSub.hSub.{u_1, u_1, u_1} α α α (instHSub.{u_1} α (SubNegMonoid.toSub.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4083)))) (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4083)))) n a) (HSMul.hSMul.{0, u_1, u_1} Int α α (instHSMul.{0, u_1} Int α (SubNegMonoid.toZSMul.{u_1} α (SubtractionMonoid.toSubNegMonoid.{u_1} α (SubtractionCommMonoid.toSubtractionMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.4083)))) n b))
  - ZeroHom.id.eq_1
    Statement: forall (M : Type.{u_10}) [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989 : Zero.{u_10} M], Eq.{succ u_10} (ZeroHom.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989) (ZeroHom.id.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989) (ZeroHom.mk.{u_10, u_10} M M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989 (fun (x : M) => x) (ZeroHom.id._proof_1.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.6989))
  - Nat.succ_div_of_mod_ne_zero
    Statement: forall {a : Nat} {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) a (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) a (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) a b))
  - Nat.mul_dvd_mul_left
    Statement: forall {b : Nat} {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd b c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - AddCommMagma.ext_iff
    Statement: forall {G : Type.{u}} {x : AddCommMagma.{u} G} {y : AddCommMagma.{u} G}, Iff (Eq.{succ u} (AddCommMagma.{u} G) x y) (Eq.{succ u} (G -> G -> G) (Add.add.{u} G (AddCommMagma.toAdd.{u} G x)) (Add.add.{u} G (AddCommMagma.toAdd.{u} G y)))
  - ZeroHom.comp_id
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270 : Zero.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8273 : Zero.{u_5} N] (f : ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8273), Eq.{max (succ u_4) (succ u_5)} (ZeroHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8273) (ZeroHom.comp.{u_4, u_4, u_5} M M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8273 f (ZeroHom.id.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8270)) f
  - zpowRec.eq_1
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.4747 : One.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.4750 : Mul.{u_1} G] [inst._@.Mathlib.Algebra.Group.Defs._hyg.4753 : Inv.{u_1} G] (npow : Nat -> G -> G) (x._@.Mathlib.Algebra.Group.Defs._hyg.4773 : G) (n : Nat), Eq.{succ u_1} G (zpowRec.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.4747 inst._@.Mathlib.Algebra.Group.Defs._hyg.4750 inst._@.Mathlib.Algebra.Group.Defs._hyg.4753 npow (Int.ofNat n) x._@.Mathlib.Algebra.Group.Defs._hyg.4773) (npow n x._@.Mathlib.Algebra.Group.Defs._hyg.4773)
  - MulHom.cancel_left
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 : Mul.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 : Mul.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082 : Mul.{u_6} P] {g : MulHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082} {f₁ : MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079} {f₂ : MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079}, (Function.Injective.{succ u_5, succ u_6} N P (DFunLike.coe.{max (succ u_5) (succ u_6), succ u_5, succ u_6} (MulHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082) N (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : N) => P) (MulHom.funLike.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082) g)) -> (Iff (Eq.{max (succ u_4) (succ u_6)} (MulHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082) (MulHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082 g f₁) (MulHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8082 g f₂)) (Eq.{max (succ u_4) (succ u_5)} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8076 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8079) f₁ f₂))
  - Semigroup.ext_iff
    Statement: forall {G : Type.{u}} {x : Semigroup.{u} G} {y : Semigroup.{u} G}, Iff (Eq.{succ u} (Semigroup.{u} G) x y) (Eq.{succ u} (G -> G -> G) (Mul.mul.{u} G (Semigroup.toMul.{u} G x)) (Mul.mul.{u} G (Semigroup.toMul.{u} G y)))
  - AddHom.mk.injEq
    Statement: forall {M : Type.{u_10}} {N : Type.{u_11}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171 : Add.{u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174 : Add.{u_11} N] (toFun : M -> N) (map_add' : forall (x : M) (y : M), Eq.{succ u_11} N (toFun (HAdd.hAdd.{u_10, u_10, u_10} M M M (instHAdd.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171) x y)) (HAdd.hAdd.{u_11, u_11, u_11} N N N (instHAdd.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174) (toFun x) (toFun y))) (toFun_1 : M -> N) (map_add'_1 : forall (x : M) (y : M), Eq.{succ u_11} N (toFun_1 (HAdd.hAdd.{u_10, u_10, u_10} M M M (instHAdd.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171) x y)) (HAdd.hAdd.{u_11, u_11, u_11} N N N (instHAdd.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174) (toFun_1 x) (toFun_1 y))), Eq.{1} Prop (Eq.{max (succ u_10) (succ u_11)} (AddHom.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174) (AddHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174 toFun map_add') (AddHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.171 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.174 toFun_1 map_add'_1)) (Eq.{max (succ u_10) (succ u_11)} (M -> N) toFun toFun_1)
  - Monoid.one_mul
    Statement: forall {M : Type.{u}} [self : Monoid.{u} M] (a : M), Eq.{succ u} M (HMul.hMul.{u, u, u} M M M (instHMul.{u} M (Semigroup.toMul.{u} M (Monoid.toSemigroup.{u} M self))) (OfNat.ofNat.{u} M 1 (One.toOfNat1.{u} M (Monoid.toOne.{u} M self))) a) a
  - nsmulAddMonoidHom_apply
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53 : AddCommMonoid.{u_1} α] (n : Nat) (x._@.Mathlib.Algebra.Group.Hom.Basic._hyg.71 : α), Eq.{succ u_1} α (DFunLike.coe.{succ u_1, succ u_1, succ u_1} (AddMonoidHom.{u_1, u_1} α α (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53)) (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53))) α (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : α) => α) (AddMonoidHom.instFunLike.{u_1, u_1} α α (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53)) (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53))) (nsmulAddMonoidHom.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53 n) x._@.Mathlib.Algebra.Group.Hom.Basic._hyg.71) (HSMul.hSMul.{0, u_1, u_1} Nat α α (instHSMul.{0, u_1} Nat α (AddMonoid.toNatSMul.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.53))) n x._@.Mathlib.Algebra.Group.Hom.Basic._hyg.71)
  - MonoidWithZero.mul_zero
    Statement: forall {M₀ : Type.{u}} [self : MonoidWithZero.{u} M₀] (a : M₀), Eq.{succ u} M₀ (HMul.hMul.{u, u, u} M₀ M₀ M₀ (instHMul.{u} M₀ (Semigroup.toMul.{u} M₀ (Monoid.toSemigroup.{u} M₀ (MonoidWithZero.toMonoid.{u} M₀ self)))) a (OfNat.ofNat.{u} M₀ 0 (Zero.toOfNat0.{u} M₀ (MonoidWithZero.toZero.{u} M₀ self)))) (OfNat.ofNat.{u} M₀ 0 (Zero.toOfNat0.{u} M₀ (MonoidWithZero.toZero.{u} M₀ self)))
  - left_eq_add
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1514 : AddMonoid.{u_4} M] [inst._@.Mathlib.Algebra.Group.Basic._hyg.1517 : IsLeftCancelAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1514))] {a : M} {b : M}, Iff (Eq.{succ u_4} M a (HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1514))) a b)) (Eq.{succ u_4} M b (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1514)))))
  - AddMonoidHom.flipHom_apply
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} {P : Type.{uP}} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 : AddZeroClass.{uM} M} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 : AddZeroClass.{uN} N} {x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026 : AddCommMonoid.{uP} P} (f : AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))), Eq.{max (succ uN) (succ (max uP uM))} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (DFunLike.coe.{max (succ (max (max uP uN) uM)) (succ (max (max uP uM) uN)), succ (max (max uP uN) uM), succ (max (max uP uM) uN)} (AddMonoidHom.{max (max uP uN) uM, max (max uP uM) uN} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uN, max uM uP} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))))) (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) => AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instFunLike.{max (max uP uN) uM, max (max uP uM) uN} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uM, max uP uN} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uN uP} (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uM, max uN uP} M (AddMonoidHom.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoidHom.instAddCommMonoid.{uN, uP} N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoid.toAddZeroClass.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddCommMonoid.toAddMonoid.{max (max uM uN) uP} (AddMonoidHom.{uN, max uP uM} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoid.toAddZeroClass.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddCommMonoid.toAddMonoid.{max uM uP} (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026)))) (AddMonoidHom.instAddCommMonoid.{uN, max uM uP} N (AddMonoidHom.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 (AddMonoid.toAddZeroClass.{uP} P (AddCommMonoid.toAddMonoid.{uP} P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))) x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 (AddMonoidHom.instAddCommMonoid.{uM, uP} M P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026))))) (AddMonoidHom.flipHom.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026) f) (AddMonoidHom.flip.{uM, uN, uP} M N P x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1020 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1023 x._@.Mathlib.Algebra.Group.Hom.Instances._hyg.1026 f)
  - Nat.mul_mod_mul_left
    Statement: forall (z : Nat) (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) z x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) z y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) z (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - eq_iff_eq_of_add_eq_add
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1812 : AddCancelCommMonoid.{u_1} α] {a : α} {b : α} {c : α} {d : α}, (Eq.{succ u_1} α (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α (AddCancelCommMonoid.toAddCommMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.1812))))) a b) (HAdd.hAdd.{u_1, u_1, u_1} α α α (instHAdd.{u_1} α (AddZeroClass.toAdd.{u_1} α (AddMonoid.toAddZeroClass.{u_1} α (AddCommMonoid.toAddMonoid.{u_1} α (AddCancelCommMonoid.toAddCommMonoid.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.1812))))) c d)) -> (Iff (Eq.{succ u_1} α a c) (Eq.{succ u_1} α b d))
  - ZeroHomClass.map_zero
    Statement: forall {F : Type.{u_10}} {M : outParam.{succ (succ u_11)} Type.{u_11}} {N : outParam.{succ (succ u_12)} Type.{u_12}} {inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.120 : Zero.{u_11} M} {inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.123 : Zero.{u_12} N} {inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.126 : FunLike.{succ u_10, succ u_11, succ u_12} F M N} [self : ZeroHomClass.{u_10, u_11, u_12} F M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.120 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.123 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.126] (f : F), Eq.{succ u_12} N (DFunLike.coe.{succ u_10, succ u_11, succ u_12} F M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.126 f (OfNat.ofNat.{u_11} M 0 (Zero.toOfNat0.{u_11} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.120))) (OfNat.ofNat.{u_12} N 0 (Zero.toOfNat0.{u_12} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.123))
  - MonoidHom.ofMapDiv.eq_1
    Statement: forall {G : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830 : Group.{u_5} G] {H : Type.{u_8}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834 : Group.{u_8} H] (f : G -> H) (hf : forall (x : G) (y : G), Eq.{succ u_8} H (f (HDiv.hDiv.{u_5, u_5, u_5} G G G (instHDiv.{u_5} G (DivInvMonoid.toDiv.{u_5} G (Group.toDivInvMonoid.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830))) x y)) (HDiv.hDiv.{u_8, u_8, u_8} H H H (instHDiv.{u_8} H (DivInvMonoid.toDiv.{u_8} H (Group.toDivInvMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834))) (f x) (f y))), Eq.{max (succ u_5) (succ u_8)} (MonoidHom.{u_5, u_8} G H (Monoid.toMulOneClass.{u_5} G (DivInvMonoid.toMonoid.{u_5} G (Group.toDivInvMonoid.{u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830))) (Monoid.toMulOneClass.{u_8} H (DivInvMonoid.toMonoid.{u_8} H (Group.toDivInvMonoid.{u_8} H inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834)))) (MonoidHom.ofMapDiv.{u_5, u_8} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830 H inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834 f hf) (MonoidHom.ofMapMulInv.{u_5, u_8} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830 H inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834 f (MonoidHom.ofMapDiv._proof_1.{u_8, u_5} G inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.830 H inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.834 f hf))
  - inv_mul_eq_one
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.4855 : Group.{u_3} G] {a : G} {b : G}, Iff (Eq.{succ u_3} G (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4855))))) (Inv.inv.{u_3} G (InvOneClass.toInv.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4855)))) a) b) (OfNat.ofNat.{u_3} G 1 (One.toOfNat1.{u_3} G (InvOneClass.toOne.{u_3} G (DivInvOneMonoid.toInvOneClass.{u_3} G (DivisionMonoid.toDivInvOneMonoid.{u_3} G (Group.toDivisionMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.4855))))))) (Eq.{succ u_3} G a b)
  - Nat.succ_ne_zero
    Statement: forall (n : Nat), Ne.{1} Nat (Nat.succ n) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Commute.pow_self
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.525 : Monoid.{u_2} M] (a : M) (n : Nat), Commute.{u_2} M (MulOneClass.toMul.{u_2} M (Monoid.toMulOneClass.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.525)) (HPow.hPow.{u_2, 0, u_2} M Nat M (instHPow.{u_2, 0} M Nat (Monoid.toNatPow.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.525)) a n) a
  - AddMonoidHom.coe_flip_mul
    Statement: forall {R : Type.{u_1}} [inst._@.Mathlib.Algebra.Ring.Basic._hyg.399 : NonUnitalNonAssocSemiring.{u_1} R], Eq.{succ u_1} (R -> (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))))) (DFunLike.coe.{succ u_1, succ u_1, succ u_1} (AddMonoidHom.{u_1, u_1} R (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddCommMonoid.toAddMonoid.{u_1} (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddMonoidHom.instAddCommMonoid.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddMonoidHom.instFunLike.{u_1, u_1} R (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddCommMonoid.toAddMonoid.{u_1} (AddMonoidHom.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)))) (AddMonoidHom.instAddCommMonoid.{u_1, u_1} R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))))) (AddMonoidHom.flip.{u_1, u_1, u_1} R R R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399) (AddMonoidHom.mul.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399))) (AddMonoidHom.mulRight.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.399)
  - add_right_ne_self
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1552 : AddMonoid.{u_4} M] [inst._@.Mathlib.Algebra.Group.Basic._hyg.1555 : IsLeftCancelAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1552))] {a : M} {b : M}, Iff (Ne.{succ u_4} M (HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1552))) a b) a) (Ne.{succ u_4} M b (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1552)))))
  - zpow_one_add
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.5910 : Group.{u_3} G] (a : G) (n : Int), Eq.{succ u_3} G (HPow.hPow.{u_3, 0, u_3} G Int G (instHPow.{u_3, 0} G Int (DivInvMonoid.toZPow.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5910))) a (HAdd.hAdd.{0, 0, 0} Int Int Int (instHAdd.{0} Int Int.instAdd) (OfNat.ofNat.{0} Int 1 (instOfNat 1)) n)) (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5910))))) a (HPow.hPow.{u_3, 0, u_3} G Int G (instHPow.{u_3, 0} G Int (DivInvMonoid.toZPow.{u_3} G (Group.toDivInvMonoid.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.5910))) a n))
  - self_eq_add_left
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1682 : AddRightCancelMonoid.{u_4} M] {a : M} {b : M}, Iff (Eq.{succ u_4} M b (HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M (AddRightCancelMonoid.toAddMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1682)))) a b)) (Eq.{succ u_4} M a (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M (AddRightCancelMonoid.toAddMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1682))))))
  - AddMonoidHom.map_mul_iff
    Statement: forall {R : Type.{u_1}} {S : Type.{u_2}} [inst._@.Mathlib.Algebra.Ring.Basic._hyg.433 : NonUnitalNonAssocSemiring.{u_1} R] [inst._@.Mathlib.Algebra.Ring.Basic._hyg.436 : NonUnitalNonAssocSemiring.{u_2} S] (f : AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))), Iff (forall (x : R) (y : R), Eq.{succ u_2} S (DFunLike.coe.{max (succ u_1) (succ u_2), succ u_1, succ u_2} (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => S) (AddMonoidHom.instFunLike.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) f (HMul.hMul.{u_1, u_1, u_1} R R R (instHMul.{u_1} R (Distrib.toMul.{u_1} R (NonUnitalNonAssocSemiring.toDistrib.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) x y)) (HMul.hMul.{u_2, u_2, u_2} S S S (instHMul.{u_2} S (Distrib.toMul.{u_2} S (NonUnitalNonAssocSemiring.toDistrib.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (DFunLike.coe.{max (succ u_1) (succ u_2), succ u_1, succ u_2} (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => S) (AddMonoidHom.instFunLike.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) f x) (DFunLike.coe.{max (succ u_1) (succ u_2), succ u_1, succ u_2} (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) R (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : R) => S) (AddMonoidHom.instFunLike.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) f y))) (Eq.{max (succ u_1) (succ u_2)} (AddMonoidHom.{u_1, max u_2 u_1} R (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{max u_1 u_2} (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddCommMonoid.toAddMonoid.{max u_1 u_2} (AddMonoidHom.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddMonoidHom.instAddCommMonoid.{u_1, u_2} R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))))) (AddMonoidHom.compr₂.{u_1, u_1, u_1, u_2} R R R S (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436) (AddMonoidHom.mul.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433) f) (AddMonoidHom.compl₂.{u_1, u_2, u_2, u_1} R S S R (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoidHom.comp.{u_1, u_2, u_2} R S (AddMonoidHom.{u_2, u_2} S S (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddMonoid.toAddZeroClass.{u_1} R (AddCommMonoid.toAddMonoid.{u_1} R (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_1} R inst._@.Mathlib.Algebra.Ring.Basic._hyg.433))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (AddMonoid.toAddZeroClass.{u_2} (AddMonoidHom.{u_2, u_2} S S (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddCommMonoid.toAddMonoid.{u_2} (AddMonoidHom.{u_2, u_2} S S (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddMonoidHom.instAddCommMonoid.{u_2, u_2} S S (AddMonoid.toAddZeroClass.{u_2} S (AddCommMonoid.toAddMonoid.{u_2} S (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436))) (NonUnitalNonAssocSemiring.toAddCommMonoid.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436)))) (AddMonoidHom.mul.{u_2} S inst._@.Mathlib.Algebra.Ring.Basic._hyg.436) f) f))
  - Nat.zero_div
    Statement: forall (b : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - AddHom.cancel_right
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} {P : Type.{u_6}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 : Add.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 : Add.{u_5} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914 : Add.{u_6} P] {g₁ : AddHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914} {g₂ : AddHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914} {f : AddHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911}, (Function.Surjective.{succ u_4, succ u_5} M N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (AddHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911) f)) -> (Iff (Eq.{max (succ u_4) (succ u_6)} (AddHom.{u_4, u_6} M P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914) (AddHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914 g₁ f) (AddHom.comp.{u_4, u_5, u_6} M N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7908 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914 g₂ f)) (Eq.{max (succ u_5) (succ u_6)} (AddHom.{u_5, u_6} N P inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7911 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.7914) g₁ g₂))
  - AddMonoidHom.add_apply
    Statement: forall {M : Type.{u_2}} {N : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 : AddZeroClass.{u_2} M] [inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053 : AddCommMonoid.{u_3} N] (f : AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (g : AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (x : M), Eq.{succ u_3} N (DFunLike.coe.{max (succ u_2) (succ u_3), succ u_2, succ u_3} (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (HAdd.hAdd.{max u_2 u_3, max u_2 u_3, max u_2 u_3} (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (instHAdd.{max u_2 u_3} (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) (AddMonoidHom.add.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053)) f g) x) (HAdd.hAdd.{u_3, u_3, u_3} N N N (instHAdd.{u_3} N (AddZeroClass.toAdd.{u_3} N (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053)))) (DFunLike.coe.{max (succ u_2) (succ u_3), succ u_2, succ u_3} (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) f x) (DFunLike.coe.{max (succ u_2) (succ u_3), succ u_2, succ u_3} (AddMonoidHom.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{u_2, u_3} M N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1050 (AddMonoid.toAddZeroClass.{u_3} N (AddCommMonoid.toAddMonoid.{u_3} N inst._@.Mathlib.Algebra.Group.Hom.Basic._hyg.1053))) g x))
  - AddMonoidHom.eval_apply_apply
    Statement: forall {M : Type.{uM}} {N : Type.{uN}} [inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 : AddZeroClass.{uM} M] [inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846 : AddCommMonoid.{uN} N] (y : M) (x : AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))), Eq.{succ uN} N (DFunLike.coe.{max (succ (max uM uN)) (succ uN), succ (max uM uN), succ uN} (AddMonoidHom.{max uM uN, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) => N) (AddMonoidHom.instFunLike.{max uM uN, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (DFunLike.coe.{max (succ uM) (succ (max uN uM)), succ uM, succ (max uN uM)} (AddMonoidHom.{uM, max uN uM} M (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{max uM uN, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846)))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instFunLike.{uM, max uN uM} M (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{max uN uM, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{max uM uN, uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) N (AddMonoid.toAddZeroClass.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddCommMonoid.toAddMonoid.{max uM uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) (AddMonoidHom.instAddCommMonoid.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846)))) (AddMonoidHom.eval.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846) y) x) (DFunLike.coe.{max (succ uM) (succ uN), succ uM, succ uN} (AddMonoidHom.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (AddMonoidHom.instFunLike.{uM, uN} M N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.843 (AddMonoid.toAddZeroClass.{uN} N (AddCommMonoid.toAddMonoid.{uN} N inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.846))) x y)
  - Nat.add_lt_iff_lt_sub_right
    Statement: forall {a : Nat} {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) a b) c) (LT.lt.{0} Nat instLTNat a (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - MulHom.mulHomClass
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2599 : Mul.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2602 : Mul.{u_5} N], MulHomClass.{max u_5 u_4, u_4, u_5} (MulHom.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2599 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2602) M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2599 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2602 (MulHom.funLike.{u_4, u_5} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2599 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.2602)
  - AddSemiconjBy.reflexive
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.225 : AddZeroClass.{u_2} M], Reflexive.{succ u_2} M (fun (a : M) (b : M) => Exists.{succ u_2} M (fun (c : M) => AddSemiconjBy.{u_2} M (AddZeroClass.toAdd.{u_2} M inst._@.Mathlib.Algebra.Group.Semiconj.Defs._hyg.225) c a b))
  - add_left_ne_self
    Statement: forall {M : Type.{u_4}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1717 : AddRightCancelMonoid.{u_4} M] {a : M} {b : M}, Iff (Ne.{succ u_4} M (HAdd.hAdd.{u_4, u_4, u_4} M M M (instHAdd.{u_4} M (AddZeroClass.toAdd.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M (AddRightCancelMonoid.toAddMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1717)))) a b) b) (Ne.{succ u_4} M a (OfNat.ofNat.{u_4} M 0 (Zero.toOfNat0.{u_4} M (AddZeroClass.toZero.{u_4} M (AddMonoid.toAddZeroClass.{u_4} M (AddRightCancelMonoid.toAddMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Basic._hyg.1717))))))
  - comp_mul_right
    Statement: forall {α : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.391 : Semigroup.{u_1} α] (x : α) (y : α), Eq.{succ u_1} (α -> α) (Function.comp.{succ u_1, succ u_1, succ u_1} α α α (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.403 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.391)) x._@.Mathlib.Algebra.Group.Basic._hyg.403 x) (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.414 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.391)) x._@.Mathlib.Algebra.Group.Basic._hyg.414 y)) (fun (x._@.Mathlib.Algebra.Group.Basic._hyg.425 : α) => HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.391)) x._@.Mathlib.Algebra.Group.Basic._hyg.425 (HMul.hMul.{u_1, u_1, u_1} α α α (instHMul.{u_1} α (Semigroup.toMul.{u_1} α inst._@.Mathlib.Algebra.Group.Basic._hyg.391)) y x))
  - OneHom.mk.sizeOf_spec
    Statement: forall {M : Type.{u_10}} {N : Type.{u_11}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240 : One.{u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243 : One.{u_11} N] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1264 : SizeOf.{succ u_10} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1265 : SizeOf.{succ u_11} N] (toFun : M -> N) (map_one' : Eq.{succ u_11} N (toFun (OfNat.ofNat.{u_10} M 1 (One.toOfNat1.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240))) (OfNat.ofNat.{u_11} N 1 (One.toOfNat1.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243))), Eq.{1} Nat (SizeOf.sizeOf.{max (succ u_10) (succ u_11)} (OneHom.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243) (OneHom._sizeOf_inst.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1264 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1265) (OneHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243 toFun map_one')) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (SizeOf.sizeOf.{0} (Eq.{succ u_11} N (toFun (OfNat.ofNat.{u_10} M 1 (One.toOfNat1.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240))) (OfNat.ofNat.{u_11} N 1 (One.toOfNat1.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243))) (instSizeOfDefault.{0} (Eq.{succ u_11} N (toFun (OfNat.ofNat.{u_10} M 1 (One.toOfNat1.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1240))) (OfNat.ofNat.{u_11} N 1 (One.toOfNat1.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.1243)))) map_one'))
  - Nat.mul_left_cancel
    Statement: forall {n : Nat} {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) n) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) n m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) n k)) -> (Eq.{1} Nat m k)
  - eq_inv_of_mul_eq_one_left
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6040 : DivisionMonoid.{u_1} G] {a : G} {b : G}, (Eq.{succ u_1} G (HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G (MulOneClass.toMul.{u_1} G (Monoid.toMulOneClass.{u_1} G (DivInvMonoid.toMonoid.{u_1} G (DivisionMonoid.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6040))))) a b) (OfNat.ofNat.{u_1} G 1 (One.toOfNat1.{u_1} G (MulOneClass.toOne.{u_1} G (Monoid.toMulOneClass.{u_1} G (DivInvMonoid.toMonoid.{u_1} G (DivisionMonoid.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6040))))))) -> (Eq.{succ u_1} G a (Inv.inv.{u_1} G (DivInvMonoid.toInv.{u_1} G (DivisionMonoid.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6040)) b))
  - Commute.eq_1
    Statement: forall {S : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.16 : Mul.{u_3} S] (a : S) (b : S), Eq.{1} Prop (Commute.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.16 a b) (SemiconjBy.{u_3} S inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.16 a b b)
  - inv_mul_cancel_right
    Statement: forall {G : Type.{u_1}} [inst._@.Mathlib.Algebra.Group.Defs._hyg.6310 : Group.{u_1} G] (a : G) (b : G), Eq.{succ u_1} G (HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G (MulOneClass.toMul.{u_1} G (Monoid.toMulOneClass.{u_1} G (DivInvMonoid.toMonoid.{u_1} G (Group.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6310))))) (HMul.hMul.{u_1, u_1, u_1} G G G (instHMul.{u_1} G (MulOneClass.toMul.{u_1} G (Monoid.toMulOneClass.{u_1} G (DivInvMonoid.toMonoid.{u_1} G (Group.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6310))))) a (Inv.inv.{u_1} G (DivInvMonoid.toInv.{u_1} G (Group.toDivInvMonoid.{u_1} G inst._@.Mathlib.Algebra.Group.Defs._hyg.6310)) b)) b) a
  - Commute.one_left
    Statement: forall {M : Type.{u_2}} [inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.392 : MulOneClass.{u_2} M] (a : M), Commute.{u_2} M (MulOneClass.toMul.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.392) (OfNat.ofNat.{u_2} M 1 (One.toOfNat1.{u_2} M (MulOneClass.toOne.{u_2} M inst._@.Mathlib.Algebra.Group.Commute.Defs._hyg.392))) a
  - Nat.mul_le_of_le_div
    Statement: forall (k : Nat) (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y k)) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x k) y)
  - inv_inj
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.1953 : InvolutiveInv.{u_3} G] {a : G} {b : G}, Iff (Eq.{succ u_3} G (Inv.inv.{u_3} G (InvolutiveInv.toInv.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.1953) a) (Inv.inv.{u_3} G (InvolutiveInv.toInv.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.1953) b)) (Eq.{succ u_3} G a b)
  - Nat.add_sub_cancel'
    Statement: forall {n : Nat} {m : Nat}, (LE.le.{0} Nat instLENat m n) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n m)) n)
  - add_right_comm
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.681 : AddCommSemigroup.{u_3} G] (a : G) (b : G) (c : G), Eq.{succ u_3} G (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddCommMagma.toAdd.{u_3} G (AddCommSemigroup.toAddCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.681))) (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddCommMagma.toAdd.{u_3} G (AddCommSemigroup.toAddCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.681))) a b) c) (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddCommMagma.toAdd.{u_3} G (AddCommSemigroup.toAddCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.681))) (HAdd.hAdd.{u_3, u_3, u_3} G G G (instHAdd.{u_3} G (AddCommMagma.toAdd.{u_3} G (AddCommSemigroup.toAddCommMagma.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.681))) a c) b)
  - Nat.sub_eq
    Statement: forall {x : [mdata borrowed:1 Nat]} {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub x y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) x y)
  - div_eq_of_eq_mul'
    Statement: forall {G : Type.{u_3}} [inst._@.Mathlib.Algebra.Group.Basic._hyg.6561 : CommGroup.{u_3} G] {a : G} {b : G} {c : G}, (Eq.{succ u_3} G a (HMul.hMul.{u_3, u_3, u_3} G G G (instHMul.{u_3} G (MulOneClass.toMul.{u_3} G (Monoid.toMulOneClass.{u_3} G (DivInvMonoid.toMonoid.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6561)))))) b c)) -> (Eq.{succ u_3} G (HDiv.hDiv.{u_3, u_3, u_3} G G G (instHDiv.{u_3} G (DivInvMonoid.toDiv.{u_3} G (Group.toDivInvMonoid.{u_3} G (CommGroup.toGroup.{u_3} G inst._@.Mathlib.Algebra.Group.Basic._hyg.6561)))) a b) c)
  - MonoidHom.map_zpow'
    Statement: forall {M : Type.{u_4}} {N : Type.{u_5}} [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533 : DivInvMonoid.{u_4} M] [inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536 : DivInvMonoid.{u_5} N] (f : MonoidHom.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))), (forall (x : M), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) f (Inv.inv.{u_4} M (DivInvMonoid.toInv.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533) x)) (Inv.inv.{u_5} N (DivInvMonoid.toInv.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) f x))) -> (forall (a : M) (n : Int), Eq.{succ u_5} N (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) f (HPow.hPow.{u_4, 0, u_4} M Int M (instHPow.{u_4, 0} M Int (DivInvMonoid.toZPow.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) a n)) (HPow.hPow.{u_5, 0, u_5} N Int N (instHPow.{u_5, 0} N Int (DivInvMonoid.toZPow.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536)) (DFunLike.coe.{max (succ u_4) (succ u_5), succ u_4, succ u_5} (MonoidHom.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => N) (MonoidHom.instFunLike.{u_4, u_5} M N (Monoid.toMulOneClass.{u_4} M (DivInvMonoid.toMonoid.{u_4} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8533)) (Monoid.toMulOneClass.{u_5} N (DivInvMonoid.toMonoid.{u_5} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.8536))) f a) n))
  - AddMonoid.End.intCast_apply
    Statement: forall {M : Type.{uM}} [inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390 : AddCommGroup.{uM} M] (z : Int) (m : M), Eq.{succ uM} M (DFunLike.coe.{succ uM, succ uM, succ uM} (AddMonoid.End.{uM} M (AddMonoid.toAddZeroClass.{uM} M (SubNegMonoid.toAddMonoid.{uM} M (AddGroup.toSubNegMonoid.{uM} M (AddCommGroup.toAddGroup.{uM} M inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390))))) M (fun (x._@.Mathlib.Data.FunLike.Basic._hyg.44 : M) => M) (AddMonoid.End.instFunLike.{uM} M (AddMonoid.toAddZeroClass.{uM} M (SubNegMonoid.toAddMonoid.{uM} M (AddGroup.toSubNegMonoid.{uM} M (AddCommGroup.toAddGroup.{uM} M inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390))))) (Int.cast.{uM} (AddMonoid.End.{uM} M (AddMonoid.toAddZeroClass.{uM} M (SubNegMonoid.toAddMonoid.{uM} M (AddGroup.toSubNegMonoid.{uM} M (AddCommGroup.toAddGroup.{uM} M inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390))))) (AddMonoid.End.instIntCast.{uM} M inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390) z) m) (HSMul.hSMul.{0, uM, uM} Int M M (instHSMul.{0, uM} Int M (SubNegMonoid.toZSMul.{uM} M (AddGroup.toSubNegMonoid.{uM} M (AddCommGroup.toAddGroup.{uM} M inst._@.Mathlib.Algebra.Group.Hom.Instances._hyg.390)))) z m)
  - AddMonoidHom.mk.inj
    Statement: forall {M : Type.{u_10}} {N : Type.{u_11}} {inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 : AddZeroClass.{u_10} M} {inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 : AddZeroClass.{u_11} N} {toZeroHom : ZeroHom.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)} {map_add' : forall (x : M) (y : M), Eq.{succ u_11} N (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom (HAdd.hAdd.{u_10, u_10, u_10} M M M (instHAdd.{u_10} M (AddZeroClass.toAdd.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709)) x y)) (HAdd.hAdd.{u_11, u_11, u_11} N N N (instHAdd.{u_11} N (AddZeroClass.toAdd.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom x) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom y))} {toZeroHom_1 : ZeroHom.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)} {map_add'_1 : forall (x : M) (y : M), Eq.{succ u_11} N (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom_1 (HAdd.hAdd.{u_10, u_10, u_10} M M M (instHAdd.{u_10} M (AddZeroClass.toAdd.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709)) x y)) (HAdd.hAdd.{u_11, u_11, u_11} N N N (instHAdd.{u_11} N (AddZeroClass.toAdd.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom_1 x) (ZeroHom.toFun.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) toZeroHom_1 y))}, (Eq.{max (succ u_10) (succ u_11)} (AddMonoidHom.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712) (AddMonoidHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 toZeroHom map_add') (AddMonoidHom.mk.{u_10, u_11} M N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709 inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712 toZeroHom_1 map_add'_1)) -> (Eq.{max (succ u_10) (succ u_11)} (ZeroHom.{u_10, u_11} M N (AddZeroClass.toZero.{u_10} M inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.709) (AddZeroClass.toZero.{u_11} N inst._@.Mathlib.Algebra.Group.Hom.Defs._hyg.712)) toZeroHom toZeroHom_1)
  - add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - add_comm_spec_two
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ (Nat.succ Nat.zero)))
  - add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - nat_add_zero_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) Nat.zero
  - nat_add_zero_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (Nat.succ Nat.zero)
  - nat_add_zero_spec_two
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (Nat.succ (Nat.succ Nat.zero))
  - nat_add_zero_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) Nat.zero
  - nat_add_zero_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (Nat.succ Nat.zero)
  - nat_zero_add_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) Nat.zero
  - nat_zero_add_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_zero_add_spec_two
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ (Nat.succ Nat.zero))) (Nat.succ (Nat.succ Nat.zero))
  - nat_zero_add_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) Nat.zero
  - nat_zero_add_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - nat_add_assoc_spec_zero
    Statement: forall (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_assoc_spec_one
    Statement: forall (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_assoc_spec_two
    Statement: forall (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_assoc_spec_zero
    Statement: forall (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_assoc_spec_one
    Statement: forall (m : Nat) (k : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) k) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m k))
  - nat_add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - nat_add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - nat_add_comm_spec_two
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ (Nat.succ Nat.zero)))
  - nat_add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - nat_add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - nat_succ_add_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m))
  - nat_succ_add_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m))
  - nat_succ_add_spec_two
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ (Nat.succ Nat.zero))) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m))
  - nat_succ_add_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m))
  - nat_succ_add_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m))
  - nat_add_succ_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m))
  - nat_add_succ_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m))
  - nat_add_succ_spec_two
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m))
  - nat_add_succ_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m))
  - nat_add_succ_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (Nat.succ m)) (Nat.succ (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m))
  - nat_add_one_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ Nat.zero)
  - nat_add_one_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ (Nat.succ Nat.zero))
  - nat_add_one_spec_two
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - nat_add_one_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ Nat.zero)
  - nat_add_one_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ (Nat.succ Nat.zero))
  - nat_one_add_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) Nat.zero) (Nat.succ Nat.zero)
  - nat_one_add_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - nat_one_add_spec_two
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (Nat.succ (Nat.succ Nat.zero))) (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - nat_one_add_spec_zero
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) Nat.zero) (Nat.succ Nat.zero)
  - nat_one_add_spec_one
    Statement: Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1)) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - add_comm_spec_two
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ (Nat.succ Nat.zero)))
  - add_comm_spec_zero
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m Nat.zero)
  - add_comm_spec_one
    Statement: forall (m : Nat), Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) m) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_two
    Statement: Eq.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_two
    Statement: Eq.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_two
    Statement: Eq.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_two
    Statement: Eq.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - Nat.mul_self_sub_mul_self_eq_spec_zero
    Statement: forall (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero Nat.zero) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero b))
  - Nat.mul_self_sub_mul_self_eq_spec_one
    Statement: forall (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) b))
  - Nat.mul_self_sub_mul_self_eq_spec_two
    Statement: forall (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ (Nat.succ Nat.zero)) b))
  - Nat.mul_self_sub_mul_self_eq_spec_zero
    Statement: forall (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero Nat.zero) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero b))
  - Nat.mul_self_sub_mul_self_eq_spec_one
    Statement: forall (b : Nat), Eq.{1} Nat (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b b)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) b) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) b))
  - Nat.mul_dvd_of_dvd_div_spec_zero
    Statement: forall {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd Nat.zero (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c Nat.zero) b)
  - Nat.mul_dvd_of_dvd_div_spec_one
    Statement: forall {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ Nat.zero) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c (Nat.succ Nat.zero)) b)
  - Nat.mul_dvd_of_dvd_div_spec_two
    Statement: forall {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ (Nat.succ Nat.zero)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c (Nat.succ (Nat.succ Nat.zero))) b)
  - Nat.mul_dvd_of_dvd_div_spec_zero
    Statement: forall {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd Nat.zero (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c Nat.zero) b)
  - Nat.mul_dvd_of_dvd_div_spec_one
    Statement: forall {b : Nat} {c : Nat}, (Dvd.dvd.{0} Nat Nat.instDvd c b) -> (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ Nat.zero) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) b c)) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c (Nat.succ Nat.zero)) b)
  - Nat.mul_div_mul_left_spec_zero
    Statement: forall (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - Nat.mul_div_mul_left_spec_one
    Statement: forall (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - Nat.mul_div_mul_left_spec_two
    Statement: forall (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ (Nat.succ Nat.zero))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - Nat.mul_div_mul_left_spec_zero
    Statement: forall (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - Nat.mul_div_mul_left_spec_one
    Statement: forall (n : Nat) (k : Nat), (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) n) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) k)) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) n k))
  - Nat.succ_max_succ_spec_zero
    Statement: forall (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ Nat.zero) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax Nat.zero y))
  - Nat.succ_max_succ_spec_one
    Statement: forall (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ (Nat.succ Nat.zero)) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax (Nat.succ Nat.zero) y))
  - Nat.succ_max_succ_spec_two
    Statement: forall (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ (Nat.succ (Nat.succ Nat.zero))) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax (Nat.succ (Nat.succ Nat.zero)) y))
  - Nat.succ_max_succ_spec_zero
    Statement: forall (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ Nat.zero) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax Nat.zero y))
  - Nat.succ_max_succ_spec_one
    Statement: forall (y : Nat), Eq.{1} Nat (Max.max.{0} Nat Nat.instMax (Nat.succ (Nat.succ Nat.zero)) (Nat.succ y)) (Nat.succ (Max.max.{0} Nat Nat.instMax (Nat.succ Nat.zero) y))
  - Nat.sub_one_add_one_eq_of_pos_spec_zero
    Statement: (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) Nat.zero)
  - Nat.sub_one_add_one_eq_of_pos_spec_one
    Statement: (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ Nat.zero))
  - Nat.sub_one_add_one_eq_of_pos_spec_two
    Statement: (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ (Nat.succ Nat.zero))) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ (Nat.succ Nat.zero)))
  - Nat.sub_one_add_one_eq_of_pos_spec_zero
    Statement: (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) Nat.zero)
  - Nat.sub_one_add_one_eq_of_pos_spec_one
    Statement: (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) (Nat.succ Nat.zero))
  - Nat.mul_zero_spec_zero
    Statement: Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one
    Statement: Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two
    Statement: Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero
    Statement: Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one
    Statement: Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.sub_pos_of_lt_spec_zero
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat Nat.zero n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n Nat.zero))
  - Nat.sub_pos_of_lt_spec_one
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat (Nat.succ Nat.zero) n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n (Nat.succ Nat.zero)))
  - Nat.sub_pos_of_lt_spec_two
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat (Nat.succ (Nat.succ Nat.zero)) n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n (Nat.succ (Nat.succ Nat.zero))))
  - Nat.sub_pos_of_lt_spec_zero
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat Nat.zero n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n Nat.zero))
  - Nat.sub_pos_of_lt_spec_one
    Statement: forall {n : Nat}, (LT.lt.{0} Nat instLTNat (Nat.succ Nat.zero) n) -> (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) n (Nat.succ Nat.zero)))
  - Nat.mul_add_div_spec_zero
    Statement: (GT.gt.{0} Nat instLTNat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero x) y) Nat.zero) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y Nat.zero)))
  - Nat.mul_add_div_spec_one
    Statement: (GT.gt.{0} Nat instLTNat (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) x) y) (Nat.succ Nat.zero)) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ Nat.zero))))
  - Nat.mul_add_div_spec_two
    Statement: (GT.gt.{0} Nat instLTNat (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) x) y) (Nat.succ (Nat.succ Nat.zero))) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ (Nat.succ Nat.zero)))))
  - Nat.mul_add_div_spec_zero
    Statement: (GT.gt.{0} Nat instLTNat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero x) y) Nat.zero) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y Nat.zero)))
  - Nat.mul_add_div_spec_one
    Statement: (GT.gt.{0} Nat instLTNat (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (forall (x : Nat) (y : Nat), Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) x) y) (Nat.succ Nat.zero)) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ Nat.zero))))
  - Nat.mul_mul_mul_comm_spec_zero
    Statement: forall (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - Nat.mul_mul_mul_comm_spec_one
    Statement: forall (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - Nat.mul_mul_mul_comm_spec_two
    Statement: forall (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - Nat.mul_mul_mul_comm_spec_zero
    Statement: forall (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - Nat.mul_mul_mul_comm_spec_one
    Statement: forall (b : Nat) (c : Nat) (d : Nat), Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) b) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) c d)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) c) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) b d))
  - Nat.mul_mod_mod_spec_zero
    Statement: forall (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero n) l)
  - Nat.mul_mod_mod_spec_one
    Statement: forall (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) n) l)
  - Nat.mul_mod_mod_spec_two
    Statement: forall (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) n) l)
  - Nat.mul_mod_mod_spec_zero
    Statement: forall (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero n) l)
  - Nat.mul_mod_mod_spec_one
    Statement: forall (n : Nat) (l : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) n l)) l) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) n) l)
  - zero_eq_zero_on_structure_type_10
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_structure_type_12
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_closure_property_157
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_associativity_157
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_closure_property_164
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_associativity_164
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_associativity_171
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_closure_property_178
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_associativity_178
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_closure_property_185
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_eq_zero_on_associativity_192
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_structure_type_10
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_structure_type_12
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_closure_property_157
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_associativity_157
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_closure_property_164
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_associativity_164
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_associativity_171
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_closure_property_178
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_associativity_178
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_closure_property_185
    Statement: Eq.{1} Nat 0 Nat.zero
  - zero_add_zero_on_associativity_192
    Statement: Eq.{1} Nat 0 Nat.zero
  - one_add_one_eq_two_on_succ_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_succ_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add1_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add1_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add2_applied_to_zero
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add2_applied_to_zero
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_succ_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_succ_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add1_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add1_applied_to_one
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add2_applied_to_zero
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_add2_applied_to_zero
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_twist_8_two
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_divisors_of_9
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_char_2
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_ring_Z_mod_2
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - one_add_one_eq_two_on_mult_group_Z_3
    Statement: Eq.{1} Nat 2 (Nat.succ (Nat.succ Nat.zero))
  - two_add_one_eq_three_on_num_3
    Statement: Eq.{1} Nat (Nat.succ (Nat.succ (Nat.succ Nat.zero))) (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_succ_applied_to_two
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add1_applied_to_two
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add2_applied_to_one
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add2_applied_to_one
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_succ_applied_to_two
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add1_applied_to_two
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add2_applied_to_one
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_add2_applied_to_one
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_divisors_of_10
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - two_add_one_eq_three_on_char_3
    Statement: Eq.{1} Nat 3 (Nat.succ (Nat.succ (Nat.succ Nat.zero)))
  - mul_one_on_Nat
    Statement: forall (a : Nat), Eq.{1} Nat (Nat.mul a (Nat.succ Nat.zero)) a
  - one_mul_on_Nat
    Statement: forall (a : Nat), Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero) a) a
  - Nat.succ_min_succ_spec_zero
    Statement: forall (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ Nat.zero) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat Nat.zero y))
  - Nat.succ_min_succ_spec_one
    Statement: forall (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat (Nat.succ Nat.zero) y))
  - Nat.succ_min_succ_spec_two
    Statement: forall (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ (Nat.succ (Nat.succ Nat.zero))) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat (Nat.succ (Nat.succ Nat.zero)) y))
  - Nat.succ_min_succ_spec_zero
    Statement: forall (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ Nat.zero) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat Nat.zero y))
  - Nat.succ_min_succ_spec_one
    Statement: forall (y : Nat), Eq.{1} Nat (Min.min.{0} Nat instMinNat (Nat.succ (Nat.succ Nat.zero)) (Nat.succ y)) (Nat.succ (Min.min.{0} Nat instMinNat (Nat.succ Nat.zero) y))
  - Nat.succ_div_of_mod_ne_zero_spec_zero
    Statement: forall {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) Nat.zero b))
  - Nat.succ_div_of_mod_ne_zero_spec_one
    Statement: forall {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (Nat.succ Nat.zero) b))
  - Nat.succ_div_of_mod_ne_zero_spec_two
    Statement: forall {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (Nat.succ (Nat.succ Nat.zero)) b))
  - Nat.succ_div_of_mod_ne_zero_spec_zero
    Statement: forall {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) Nat.zero b))
  - Nat.succ_div_of_mod_ne_zero_spec_one
    Statement: forall {b : Nat}, (Ne.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))) -> (Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 1 (instOfNatNat 1))) b) (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (Nat.succ Nat.zero) b))
  - Nat.mul_dvd_mul_left_spec_zero
    Statement: forall {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd Nat.zero c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a Nat.zero) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - Nat.mul_dvd_mul_left_spec_one
    Statement: forall {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ Nat.zero) c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a (Nat.succ Nat.zero)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - Nat.mul_dvd_mul_left_spec_two
    Statement: forall {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ (Nat.succ Nat.zero)) c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a (Nat.succ (Nat.succ Nat.zero))) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - Nat.mul_dvd_mul_left_spec_zero
    Statement: forall {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd Nat.zero c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a Nat.zero) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - Nat.mul_dvd_mul_left_spec_one
    Statement: forall {c : Nat} (a : Nat), (Dvd.dvd.{0} Nat Nat.instDvd (Nat.succ Nat.zero) c) -> (Dvd.dvd.{0} Nat Nat.instDvd (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a (Nat.succ Nat.zero)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) a c))
  - Nat.mul_mod_mul_left_spec_zero
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - Nat.mul_mod_mul_left_spec_one
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - Nat.mul_mod_mul_left_spec_two
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - Nat.mul_mod_mul_left_spec_zero
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - Nat.mul_mod_mul_left_spec_one
    Statement: forall (x : Nat) (y : Nat), Eq.{1} Nat (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) x) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) y)) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) (HMod.hMod.{0, 0, 0} Nat Nat Nat (instHMod.{0} Nat Nat.instMod) x y))
  - Nat.succ_ne_zero_spec_zero
    Statement: Ne.{1} Nat (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.succ_ne_zero_spec_one
    Statement: Ne.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.succ_ne_zero_spec_two
    Statement: Ne.{1} Nat (Nat.succ (Nat.succ (Nat.succ Nat.zero))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.succ_ne_zero_spec_zero
    Statement: Ne.{1} Nat (Nat.succ Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.succ_ne_zero_spec_one
    Statement: Ne.{1} Nat (Nat.succ (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.zero_div_spec_zero
    Statement: Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.zero_div_spec_one
    Statement: Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.zero_div_spec_two
    Statement: Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ (Nat.succ Nat.zero))) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.zero_div_spec_zero
    Statement: Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.zero_div_spec_one
    Statement: Eq.{1} Nat (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.add_lt_iff_lt_sub_right_spec_zero
    Statement: forall {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero b) c) (LT.lt.{0} Nat instLTNat Nat.zero (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - Nat.add_lt_iff_lt_sub_right_spec_one
    Statement: forall {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) b) c) (LT.lt.{0} Nat instLTNat (Nat.succ Nat.zero) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - Nat.add_lt_iff_lt_sub_right_spec_two
    Statement: forall {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ (Nat.succ Nat.zero)) b) c) (LT.lt.{0} Nat instLTNat (Nat.succ (Nat.succ Nat.zero)) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - Nat.add_lt_iff_lt_sub_right_spec_zero
    Statement: forall {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) Nat.zero b) c) (LT.lt.{0} Nat instLTNat Nat.zero (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - Nat.add_lt_iff_lt_sub_right_spec_one
    Statement: forall {b : Nat} {c : Nat}, Iff (LT.lt.{0} Nat instLTNat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) (Nat.succ Nat.zero) b) c) (LT.lt.{0} Nat instLTNat (Nat.succ Nat.zero) (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) c b))
  - Nat.mul_left_cancel_spec_zero
    Statement: forall {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero k)) -> (Eq.{1} Nat m k)
  - Nat.mul_left_cancel_spec_one
    Statement: forall {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) k)) -> (Eq.{1} Nat m k)
  - Nat.mul_left_cancel_spec_two
    Statement: forall {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ (Nat.succ Nat.zero))) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ (Nat.succ Nat.zero)) k)) -> (Eq.{1} Nat m k)
  - Nat.mul_left_cancel_spec_zero
    Statement: forall {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) Nat.zero) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) Nat.zero k)) -> (Eq.{1} Nat m k)
  - Nat.mul_left_cancel_spec_one
    Statement: forall {m : Nat} {k : Nat}, (LT.lt.{0} Nat instLTNat (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0)) (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) m) (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) (Nat.succ Nat.zero) k)) -> (Eq.{1} Nat m k)
  - Nat.mul_le_of_le_div_spec_zero
    Statement: forall (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y Nat.zero)) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x Nat.zero) y)
  - Nat.mul_le_of_le_div_spec_one
    Statement: forall (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ Nat.zero))) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x (Nat.succ Nat.zero)) y)
  - Nat.mul_le_of_le_div_spec_two
    Statement: forall (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ (Nat.succ Nat.zero)))) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x (Nat.succ (Nat.succ Nat.zero))) y)
  - Nat.mul_le_of_le_div_spec_zero
    Statement: forall (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y Nat.zero)) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x Nat.zero) y)
  - Nat.mul_le_of_le_div_spec_one
    Statement: forall (x : Nat) (y : Nat), (LE.le.{0} Nat instLENat x (HDiv.hDiv.{0, 0, 0} Nat Nat Nat (instHDiv.{0} Nat Nat.instDiv) y (Nat.succ Nat.zero))) -> (LE.le.{0} Nat instLENat (HMul.hMul.{0, 0, 0} Nat Nat Nat (instHMul.{0} Nat instMulNat) x (Nat.succ Nat.zero)) y)
  - Nat.add_sub_cancel'_spec_zero
    Statement: forall {m : Nat}, (LE.le.{0} Nat instLENat m Nat.zero) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero m)) Nat.zero)
  - Nat.add_sub_cancel'_spec_one
    Statement: forall {m : Nat}, (LE.le.{0} Nat instLENat m (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) m)) (Nat.succ Nat.zero))
  - Nat.add_sub_cancel'_spec_two
    Statement: forall {m : Nat}, (LE.le.{0} Nat instLENat m (Nat.succ (Nat.succ Nat.zero))) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ (Nat.succ Nat.zero)) m)) (Nat.succ (Nat.succ Nat.zero)))
  - Nat.add_sub_cancel'_spec_zero
    Statement: forall {m : Nat}, (LE.le.{0} Nat instLENat m Nat.zero) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) Nat.zero m)) Nat.zero)
  - Nat.add_sub_cancel'_spec_one
    Statement: forall {m : Nat}, (LE.le.{0} Nat instLENat m (Nat.succ Nat.zero)) -> (Eq.{1} Nat (HAdd.hAdd.{0, 0, 0} Nat Nat Nat (instHAdd.{0} Nat instAddNat) m (HSub.hSub.{0, 0, 0} Nat Nat Nat (instHSub.{0} Nat instSubNat) (Nat.succ Nat.zero) m)) (Nat.succ Nat.zero))
  - nat_add_zero_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_twist_8_one
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_9
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_11
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_divisors_of_11
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_13
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_divisors_of_13
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_150
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_associativity_150
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_171
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_associativity_185
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_192
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_nat_one
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_twist_8_one
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_9
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_11
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_divisors_of_11
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_structure_type_13
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_divisors_of_13
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_150
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_associativity_150
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_171
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_associativity_185
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_closure_property_192
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_add_zero_spec_one_on_nat_one
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_one
    Statement: Eq.{1} Nat (Nat.succ Nat.zero) (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_succ_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - nat_zero_add_spec_one_on_add1_applied_to_zero
    Statement: Eq.{1} Nat 1 (Nat.succ Nat.zero)
  - mul_one_on_Nat_zero
    Statement: Eq.{1} Nat (Nat.mul Nat.zero (Nat.succ Nat.zero)) Nat.zero
  - mul_one_on_Nat_one
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - mul_one_on_Nat_two
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ (Nat.succ Nat.zero)) (Nat.succ Nat.zero)) (Nat.succ (Nat.succ Nat.zero))
  - one_mul_on_Nat_zero
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero) Nat.zero) Nat.zero
  - one_mul_on_Nat_one
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero) (Nat.succ Nat.zero)) (Nat.succ Nat.zero)
  - one_mul_on_Nat_two
    Statement: Eq.{1} Nat (Nat.mul (Nat.succ Nat.zero) (Nat.succ (Nat.succ Nat.zero))) (Nat.succ (Nat.succ Nat.zero))
  - Nat.sub_eq_spec_zero
    Statement: forall {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub Nat.zero y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) Nat.zero y)
  - Nat.sub_eq_spec_one
    Statement: forall {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub (Nat.succ Nat.zero) y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) (Nat.succ Nat.zero) y)
  - Nat.sub_eq_spec_two
    Statement: forall {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub (Nat.succ (Nat.succ Nat.zero)) y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) (Nat.succ (Nat.succ Nat.zero)) y)
  - Nat.sub_eq_spec_zero
    Statement: forall {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub Nat.zero y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) Nat.zero y)
  - Nat.sub_eq_spec_one
    Statement: forall {y : [mdata borrowed:1 Nat]}, Eq.{1} Nat (Nat.sub (Nat.succ Nat.zero) y) (HSub.hSub.{0, 0, 0} ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) ([mdata borrowed:1 Nat]) (instHSub.{0} ([mdata borrowed:1 Nat]) instSubNat) (Nat.succ Nat.zero) y)
  - Nat.mul_zero_spec_zero_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_structure_type_10
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_structure_type_12
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_171
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_185
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_192
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_structure_type_10
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_structure_type_12
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_closure_property_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_associativity_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_closure_property_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_associativity_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_associativity_171
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_closure_property_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_associativity_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_closure_property_185
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_one_on_associativity_192
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_structure_type_10
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_structure_type_12
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_closure_property_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_associativity_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_closure_property_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_associativity_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_associativity_171
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_closure_property_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_associativity_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_closure_property_185
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_two_on_associativity_192
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_zero
    Statement: Eq.{1} Nat Nat.zero (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_structure_type_10
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_structure_type_12
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_157
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_164
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_171
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_closure_property_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))
  - Nat.mul_zero_spec_zero_on_associativity_178
    Statement: Eq.{1} Nat 0 (OfNat.ofNat.{0} Nat 0 (instOfNatNat 0))

